{
  "openapi": "3.0.0",
  "info": {
    "title": "RCG Integration - Processing Services",
    "version": "1.1.1",
    "description": "API Version**\nFor the namespace accountplan and promotion V2 APIs are required if the feature measure API has been activated on sales force side.If the feature has not been activated use V1 for accountplan and promotion APIs.\n\n**Notice**\nAPIs will raise a timeout after 55 seconds of processing. Ensure to reduce the response/load using more strict filters. Always implement a fallback in case of a http timeout in projects having mixed load scenarios.\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->"
  },
  "tags": [
    {
      "name": "Health Check",
      "description": "health check"
    },
    {
      "name": "Transaction Management",
      "description": "Manage explicit transactions for multi-messages operations."
    },
    {
      "name": "Templates Management",
      "description": "API to manage templates for measures including volumes, actuals, prices or discounts. | Measure must be properly configured before sending using the template API. All measures must be aligned with | Salesforce customizations."
    },
    {
      "name": "Volumes Management",
      "description": "API to send, get or delete volumes or baselines. Measure templates must be registered in advance using template API."
    },
    {
      "name": "Condition Management",
      "description": "Manages measures for conditions like prices, discounts and costs. Different api cover relations to account and/or products."
    },
    {
      "name": "Accountplan Management",
      "description": "APIs supporting account plans."
    },
    {
      "name": "Promotion Management",
      "description": "Request all available promotion processed within CGCloud Processing Engine."
    },
    {
      "name": "Support Management",
      "description": "API supporting analysing and trouble shooting. These APIs are not approved for production automation. They are subject of change without notice."
    },
    {
      "name": "User Management",
      "description": "Manages users and privileges including audit logging."
    },
    {
      "name": "File Management",
      "description": "Manage files requests."
    }
  ],
  "paths": {
    "/api": {
      "get": {
        "tags": [
          "Health Check"
        ],
        "description": "Return the current version of the API",
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "message": "Welcome to CGCloud Processing Services!",
                    "version": "1.1.1"
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/v1/transaction": {
      "post": {
        "tags": [
          "Transaction Management"
        ],
        "description": "Register a transaction id to bundle multiple messages beeing sent for one transaction. The transaction id must be unique for the user.\n\n**Permission Role:** Transaction register",
        "parameters": [
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          },
          {
            "name": "messages",
            "description": "Number of messages planned to send for a transaction. All messages must be received to complete the transaction and start processing.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "records",
            "description": "Number of records planned to send overall messages. Only for information.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "shortdescription",
            "description": "A short description of the transaction. Only for information.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "completemode",
            "description": "For certain POST APIs e.g. /condition/products, /condition/accounts,  condition/accountsProducts the flag controls of existing records will be replaced by the new records.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "CASTransaction": 1201
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Not authorized, missing privilege for user."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/transaction/volumespromotions/overwrite": {
      "post": {
        "tags": [
          "Transaction Management"
        ],
        "description": "Register a transaction id to bundle multiple messages beeing sent for one transaction. The transaction id must be unique for the user. With this transaction you can delete and load volumes promotions related data in one database transaction with COMMIT and ROLLBACK handling. \n\n**Permission Role:** Transaction register",
        "parameters": [
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          },
          {
            "name": "messages",
            "description": "Number of messages planned to send for a transaction. All messages must be received to complete the transaction and start processing.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "records",
            "description": "Number of records planned to send overall messages. Only for information.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "shortdescription",
            "description": "A short description of the transaction. Only for information.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "measure": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 4,
                    "pattern": "^[a-zA-Z0-9_-]+$"
                  },
                  "deletion": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "prd": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "pattern": "^[a-zA-Z0-9_-]+$"
                        },
                        "prm": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 30,
                          "pattern": "^[a-zA-Z0-9_-]+$"
                        }
                      },
                      "required": [
                        "prm"
                      ]
                    },
                    "minItems": 1,
                    "maxItems": 1000
                  }
                },
                "required": [
                  "measure",
                  "deletion"
                ],
                "example": {
                  "measure": "WD",
                  "deletion": [
                    {
                      "prm": "PRM00000001",
                      "prd": "PRD00000001"
                    },
                    {
                      "prm": "PRM00000001",
                      "prd": "PRD00000002"
                    }
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "CASTransaction": 1201
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid JSON format."
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Not authorized, missing privilege for user."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/transaction/{id}": {
      "delete": {
        "tags": [
          "Transaction Management"
        ],
        "description": "Delete a single transaction including messages. Only transactions in state INITIAL,COMMITTED,REJECTED or FAILED can be deleted.\n\n**Permission Role:** Transaction register",
        "parameters": [
          {
            "name": "id",
            "description": "Transaction id specified by the sending system. Characters allowed a-z, A-Z, 0-9, \".\", \"-\",\"_\"",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      },
      "get": {
        "tags": [
          "Transaction Management"
        ],
        "description": "Get status information for a single transaction. Rejected accounts or products are limited to maximal 100 keys.\n\n**Permission Role:** Transaction register",
        "parameters": [
          {
            "name": "id",
            "description": "Transaction id specified by the sending system. Characters allowed a-z, A-Z, 0-9, \".\", \"-\",\"_\"",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": [
                    {
                      "state": "INITIAL",
                      "date_created": "2020-03-23 12:55:37",
                      "date_processed": "",
                      "messages_registered": 1,
                      "messages_received": 0,
                      "details": {}
                    },
                    {
                      "state": "RECEIVED",
                      "date_created": "2020-03-23 12:59:42",
                      "date_processed": "",
                      "messages_registered": 1,
                      "messages_received": 1,
                      "details": {}
                    },
                    {
                      "state": "PROCESSING",
                      "date_created": "2020-03-23 12:59:42",
                      "date_processed": "",
                      "messages_registered": 1,
                      "messages_received": 1,
                      "details": {}
                    },
                    {
                      "state": "FAILED",
                      "date_created": "2020-03-23 13:10:51",
                      "date_processed": "2020-03-23 13:11:08",
                      "messages_registered": 0,
                      "messages_received": 0,
                      "details": {}
                    },
                    {
                      "state": "REJECTED",
                      "date_created": "2020-03-23 12:57:42",
                      "date_processed": "2020-03-23 12:57:55",
                      "messages_registered": 1,
                      "messages_received": 1,
                      "details": {
                        "duplicated_records": [
                          {
                            "acc": "ACC00000001",
                            "prd": "PRD00000001",
                            "datefrom": "2020-03-02",
                            "datethru": "2021-02-28",
                            "count": 2
                          }
                        ]
                      }
                    },
                    {
                      "state": "COMMITTED",
                      "date_created": "2020-03-23 12:58:34",
                      "date_processed": "2020-03-23 12:58:53",
                      "messages_registered": 1,
                      "messages_received": 1,
                      "details": {
                        "rows_processed": 1,
                        "rejected": {
                          "unknown_products": [
                            {
                              "prd": "XXX00000001"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Not authorized, missing privilege for user."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/transaction/status": {
      "post": {
        "tags": [
          "Transaction Management"
        ],
        "description": "Request status for a list of transaction ids', similiar to to request for a single transaction. Limit is 1000 ids.\n\n**Permission Role:** Transaction register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  {
                    "txid": "5235235342"
                  },
                  {
                    "txid": "3253425324345"
                  }
                ],
                "type": "array",
                "maxItems": 1000,
                "minItems": 1,
                "items": {
                  "type": "object",
                  "additionalProperties": true,
                  "properties": {
                    "txid": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 20
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": [
                    {
                      "txid": "5235235342",
                      "state": "COMMITTED",
                      "date_processed": "2017-11-20 13:20:42",
                      "date_created": "2017-11-20 13:20:39",
                      "no_messages_received": 0,
                      "no_messages": 0,
                      "details": {
                        "deleted": 2,
                        "params": {
                          "measure": "COGS"
                        }
                      }
                    },
                    {
                      "txid": "3253425324345",
                      "state": "INITIAL",
                      "date_processed": "",
                      "date_created": "2017-11-20 13:51:02",
                      "no_messages_received": 0,
                      "no_messages": 1,
                      "details": {}
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Not authorized, missing privilege for user."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/templates/measures": {
      "post": {
        "tags": [
          "Templates Management"
        ],
        "description": "Configure condition measures like prices, discounts costs and if they are product, account or product/account related. | This is used for validations and processing and must be done prior to send measures using condition APIs. | This has to be aligned with measure customizations within the Salesforce org. This will overide all existing condition measure. The code is case sensitive.\n\n**Permission Role:** Measure templates write",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "measures": [
                    {
                      "code": "a02",
                      "productmeasure": true,
                      "accountmeasure": false,
                      "accountproductmeasure": false,
                      "internal": false
                    },
                    {
                      "code": "b002",
                      "productmeasure": false,
                      "accountmeasure": true,
                      "accountproductmeasure": false,
                      "internal": false
                    },
                    {
                      "code": "COGS",
                      "productmeasure": true,
                      "accountmeasure": true,
                      "accountproductmeasure": false,
                      "internal": false
                    }
                  ]
                },
                "type": "object",
                "additionalProperties": true,
                "properties": {
                  "measures": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {
                        "code": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 4
                        },
                        "productmeasure": {
                          "type": "boolean"
                        },
                        "accountmeasure": {
                          "type": "boolean"
                        },
                        "accountproductmeasure": {
                          "type": "boolean"
                        },
                        "internal": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "result": "Rows received: 3"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      },
      "get": {
        "tags": [
          "Templates Management"
        ],
        "description": "Get a list of configured measure templates.\n\n**Permission Role:** Measure templates read",
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "measures": [
                      {
                        "code": "a02",
                        "productmeasure": true,
                        "accountmeasure": false,
                        "accountproductmeasure": false,
                        "internal": false
                      },
                      {
                        "code": "b002",
                        "productmeasure": false,
                        "accountmeasure": true,
                        "accountproductmeasure": false,
                        "internal": false
                      },
                      {
                        "code": "COGS",
                        "productmeasure": true,
                        "accountmeasure": true,
                        "accountproductmeasure": false,
                        "internal": false
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/templates/volumemeasures": {
      "post": {
        "tags": [
          "Templates Management"
        ],
        "description": "Configure volume measures | Weekly or daily measure (W, D) | Format is integer or decimal  (I,D). This will override all exsiting  volume measures. The code is case-sensitive.\n\n**Permission Role:** Volume templates write",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "volumemeasures": [
                    {
                      "code": "a01",
                      "mode": "W",
                      "format": "I"
                    },
                    {
                      "code": "b01",
                      "mode": "D",
                      "format": "D"
                    },
                    {
                      "code": "b002",
                      "mode": "W",
                      "format": "I"
                    }
                  ]
                },
                "type": "object",
                "additionalProperties": true,
                "properties": {
                  "volumemeasures": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {
                        "code": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 4
                        },
                        "mode": {
                          "enum": [
                            "W",
                            "D"
                          ],
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 1
                        },
                        "format": {
                          "enum": [
                            "I",
                            "D"
                          ],
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "result": "Rows received: 3"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      },
      "get": {
        "tags": [
          "Templates Management"
        ],
        "description": "Get a list of configured volume measure templates.  The measures can be Weekly (W) or daily (D) the format can be integer (I) or decimal (D). All information is case-sensitive.\n\n**Permission Role:** Volume templates read",
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "volumemeasures": [
                      {
                        "code": "a01",
                        "mode": "W",
                        "format": "I"
                      },
                      {
                        "code": "b01",
                        "mode": "D",
                        "format": "D"
                      },
                      {
                        "code": "b002",
                        "mode": "W",
                        "format": "I"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Not authorized, missing privilege for user."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/volumes/weeks/date/integer": {
      "post": {
        "tags": [
          "Volumes Management"
        ],
        "description": "Send volumes on week level with type integer for a registered transaction by date. Start date: date of the volume to assign to the right period (https://tools.ietf.org/html/rfc3339#section-5.6). Type: The template ID for the volumes. All messages send for a transaction must contain the same template type. Payload limit to 30MB.\n \"type\" and \"salesorg\" must be the same in all messages belonging to a transaction id.\n\n**Permission Role:** Volumes write\n**Data Source Table Name:** Weekly Measure Int",
        "parameters": [
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Payload2"
        },
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "result": "Blocks received: 2",
                    "messageid": 515
                  }
                }
              }
            }
          },
          "400": {
            "description": "JSON format not as expected or no registered transaction."
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Not authorized, missing privilege for user. | A message has not the same type as other before or template is not registered orr valid for a measure."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/volumes/daily/date/integer": {
      "post": {
        "tags": [
          "Volumes Management"
        ],
        "description": "Send volumes on day level with type integer for a registered transaction by date. Start date: date of the volume to assign to the right date (https://tools.ietf.org/html/rfc3339#section-5.6). Type: The template ID for the volumes. All messages send for a transaction must contain the same template type. Payload limit to 30MB.\n \"type\" must be the same in all messages belonging to a transaction id.\n\n**Permission Role:** Volumes write\n**Data Source Table Name:** Daily Measure Int",
        "parameters": [
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Payload2"
        },
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "result": "Blocks received: 2",
                    "messageid": 515
                  }
                }
              }
            }
          },
          "400": {
            "description": "JSON format not as expected or no registered transaction."
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Not authorized, missing privilege for user. | A message has not the same type as other before or template is not registered orr valid for a measure."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/volumes/weeks/week/integer": {
      "post": {
        "tags": [
          "Volumes Management"
        ],
        "description": "Send volumes on week level with type integer for a registered transaction by week.Year and week must be specified. Type: The template ID for the volumes .All messages send for a transaction must contain the same template type. Payload limit 30MB.     \n \"type\" and \"salesorg\" must be the same in all messages belonging to a transaction id.\n\n**Permission Role:** Volumes write\n**Data Source Table Name:** Weekly Measure Int",
        "parameters": [
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "salesorg": {
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 4,
                    "pattern": "^[a-zA-Z0-9_-]+$"
                  },
                  "volumes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "year": {
                          "type": "number"
                        },
                        "week": {
                          "type": "number"
                        },
                        "rows": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "prd": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_-]+$"
                              },
                              "acc": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_-]+$"
                              },
                              "value": {
                                "type": "number",
                                "minimum": -2147483647,
                                "maximum": 2147483647
                              }
                            },
                            "required": [
                              "prd",
                              "acc",
                              "value"
                            ]
                          }
                        }
                      },
                      "required": [
                        "year",
                        "week",
                        "rows"
                      ]
                    }
                  }
                },
                "required": [
                  "type",
                  "volumes"
                ],
                "example": {
                  "type": "b002",
                  "salesorg": "CL03",
                  "volumes": [
                    {
                      "year": 2016,
                      "week": 45,
                      "rows": [
                        {
                          "prd": "DgnDTabGayq04e38",
                          "acc": "d6Xs6iSEGosXVK2I",
                          "value": 1
                        },
                        {
                          "prd": "VEZALRvM4W3QKK4e",
                          "acc": "yx8tkgHDyXtcITey",
                          "value": 2
                        }
                      ]
                    },
                    {
                      "year": 2016,
                      "week": 46,
                      "rows": [
                        {
                          "prd": "GsKrne1GM1JWW1I9",
                          "acc": "99nVfm7T3y5MZhar",
                          "value": 3
                        },
                        {
                          "prd": "ZP6ZacEhf1AbNGJF",
                          "acc": "d151ihoxCpZe2N3M",
                          "value": 4
                        },
                        {
                          "prd": "ABC",
                          "acc": "XYZ",
                          "value": 5
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "result": "Blocks received: 2",
                    "messageid": 515
                  }
                }
              }
            }
          },
          "400": {
            "description": "JSON format not as expected or no registered transaction."
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "A message has not the same type as other before or template is not registered orr valid for a measure."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/volumes/weeks/date/decimal": {
      "post": {
        "tags": [
          "Volumes Management"
        ],
        "description": "Send volumes on week level with type decimal values for a registered transaction. Start date: date of the volumes to assign to the right period (htts://tools.ietf.org/html/rfc3339#section-5.6). Type: The template ID for the volumes .All messages send for a transaction must contain the sametemplate type. Payload limit to 30MB. Max value accepted is 2147483673 and rounded of to the 7 place.    \n \"type\" and \"salesorg\" must be the same in all messages belonging to a transaction id.\n\n**Permission Role:** Volumes write\n**Data Source Table Name:** Weekly Measure Real",
        "parameters": [
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "salesorg": {
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 4,
                    "pattern": "^[a-zA-Z0-9_-]+$"
                  },
                  "volumes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "startdate": {
                          "type": "string",
                          "format": "date"
                        },
                        "rows": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "prd": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_-]+$"
                              },
                              "acc": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_-]+$"
                              },
                              "value": {
                                "type": "number",
                                "minimum": -2147483647,
                                "maximum": 2147483647
                              }
                            },
                            "required": [
                              "prd",
                              "acc",
                              "value"
                            ]
                          }
                        }
                      },
                      "required": [
                        "startdate",
                        "rows"
                      ]
                    }
                  }
                },
                "required": [
                  "type",
                  "volumes"
                ],
                "example": {
                  "type": "b002",
                  "salesorg": "CL03",
                  "volumes": [
                    {
                      "startdate": "2016-01-01",
                      "rows": [
                        {
                          "prd": "DgnDTabGayq04e38",
                          "acc": "d6Xs6iSEGosXVK2I",
                          "value": 1.23
                        },
                        {
                          "prd": "VEZALRvM4W3QKK4e",
                          "acc": "yx8tkgHDyXtcITey",
                          "value": 2.45
                        }
                      ]
                    },
                    {
                      "startdate": "2016-01-08",
                      "rows": [
                        {
                          "prd": "GsKrne1GM1JWW1I9",
                          "acc": "99nVfm7T3y5MZhar",
                          "value": 3.882
                        },
                        {
                          "prd": "ZP6ZacEhf1AbNGJF",
                          "acc": "d151ihoxCpZe2N3M",
                          "value": 4.12
                        },
                        {
                          "prd": "ABC",
                          "acc": "XYZ",
                          "value": 5
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "result": "Blocks received: 2",
                    "messageid": 515
                  }
                }
              }
            }
          },
          "400": {
            "description": "JSON format not as expected or no registered transaction."
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Not authorized, missing privilege for user. | A message has not the same type as other before or template is not registered orr valid for a measure."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/volumes/daily/date/decimal": {
      "post": {
        "tags": [
          "Volumes Management"
        ],
        "description": "Send volumes on day level with type decimal values for a registered transaction. Start date: date of the volumes to assign to the right period (htts://tools.ietf.org/html/rfc3339#section-5.6). Type: The template ID for the volumes .All messages send for a transaction must contain the sametemplate type. Payload limit to 30MB.\n\n The maximum number for values which can be represented properly using double precision is -9007199254740992 or 9007199254740992. If your value exceeds the maximum number, it will be autimatically rounded or cut off. Please aware that you are responsible to handle such a huge number on your side to avoid rounding and cut off.\n\n**Permission Role:** Volumes write\n**Data Source Table Name:** Daily Measure Real",
        "parameters": [
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "salesorg": {
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 4,
                    "pattern": "^[a-zA-Z0-9_-]+$"
                  },
                  "volumes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "startdate": {
                          "type": "string",
                          "format": "date"
                        },
                        "rows": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "prd": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_-]+$"
                              },
                              "acc": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_-]+$"
                              },
                              "value": {
                                "type": "number",
                                "minimum": -9007199254740992,
                                "maximum": 9007199254740992
                              }
                            },
                            "required": [
                              "prd",
                              "acc",
                              "value"
                            ]
                          }
                        }
                      },
                      "required": [
                        "startdate",
                        "rows"
                      ]
                    }
                  }
                },
                "required": [
                  "type",
                  "volumes"
                ],
                "example": {
                  "type": "b002",
                  "salesorg": "CL03",
                  "volumes": [
                    {
                      "startdate": "2016-01-01",
                      "rows": [
                        {
                          "prd": "DgnDTabGayq04e38",
                          "acc": "d6Xs6iSEGosXVK2I",
                          "value": 1.23
                        },
                        {
                          "prd": "VEZALRvM4W3QKK4e",
                          "acc": "yx8tkgHDyXtcITey",
                          "value": 2.45
                        }
                      ]
                    },
                    {
                      "startdate": "2016-01-08",
                      "rows": [
                        {
                          "prd": "GsKrne1GM1JWW1I9",
                          "acc": "99nVfm7T3y5MZhar",
                          "value": 3.882
                        },
                        {
                          "prd": "ZP6ZacEhf1AbNGJF",
                          "acc": "d151ihoxCpZe2N3M",
                          "value": 4.12
                        },
                        {
                          "prd": "ABC",
                          "acc": "XYZ",
                          "value": 5
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "result": "Blocks received: 2",
                    "messageid": 515
                  }
                }
              }
            }
          },
          "400": {
            "description": "JSON format not as expected or no registered transaction."
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Not authorized, missing privilege for user. | A message has not the same type as other before or template is not registered orr valid for a measure."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/volumes/weeks/week/decimal": {
      "post": {
        "tags": [
          "Volumes Management"
        ],
        "description": "Send volumes on week level with type decimal for a registered transaction.Year and week must be specified. Type: The template ID for the volumes .All messages send for a transaction must contain the same template type. Payload limit 30MB. Max value accepted is 2147483673.\n\n**Permission Role:** Volumes write\n**Data Source Table Name:** Weekly Measure Real",
        "parameters": [
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "salesorg": {
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 4,
                    "pattern": "^[a-zA-Z0-9_-]+$"
                  },
                  "volumes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "year": {
                          "type": "number"
                        },
                        "week": {
                          "type": "number"
                        },
                        "rows": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "prd": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_-]+$"
                              },
                              "acc": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_-]+$"
                              },
                              "value": {
                                "type": "number",
                                "minimum": -2147483647,
                                "maximum": 2147483647
                              }
                            },
                            "required": [
                              "prd",
                              "acc",
                              "value"
                            ]
                          }
                        }
                      },
                      "required": [
                        "year",
                        "week",
                        "rows"
                      ]
                    }
                  }
                },
                "required": [
                  "type",
                  "volumes"
                ],
                "example": {
                  "type": "b002",
                  "salesorg": "CL03",
                  "volumes": [
                    {
                      "year": 2016,
                      "week": 45,
                      "rows": [
                        {
                          "prd": "DgnDTabGayq04e38",
                          "acc": "d6Xs6iSEGosXVK2I",
                          "value": 1.23
                        },
                        {
                          "prd": "VEZALRvM4W3QKK4e",
                          "acc": "yx8tkgHDyXtcITey",
                          "value": 2.11
                        }
                      ]
                    },
                    {
                      "year": 2016,
                      "week": 46,
                      "rows": [
                        {
                          "prd": "GsKrne1GM1JWW1I9",
                          "acc": "99nVfm7T3y5MZhar",
                          "value": 3.45
                        },
                        {
                          "prd": "ZP6ZacEhf1AbNGJF",
                          "acc": "d151ihoxCpZe2N3M",
                          "value": 4.69
                        },
                        {
                          "prd": "ABC",
                          "acc": "XYZ",
                          "value": 5.23
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "result": "Blocks received: 2",
                    "messageid": 515
                  }
                }
              }
            }
          },
          "400": {
            "description": "JSON format not as expected or no registered transaction."
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "A message has not the same type as other before or template is not registered or valid for a measure."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/volumes/weeks/{measure}/{date}": {
      "get": {
        "tags": [
          "Volumes Management"
        ],
        "description": "Request volumes for a week for a given date.  The measure code together with the measure template configuration determines if the result will be served by the integer or decimal store. The api uses pagination, see URI parameters. The API returns only a limited amount of rows (300000)\n\n**Permission Role:** Volumes read\n**Data Source Table Name depend on mesure code definition:** Weekly Measure Int or Weekly Measure Real",
        "parameters": [
          {
            "name": "per_page",
            "description": "Pagination parameter, records per page. Default is 10000",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1000,
              "maximum": 50000,
              "default": 10000
            }
          },
          {
            "name": "keepalive",
            "description": "Pagination parameter how long requested pages will be alive in minutes. Default is ten minutes.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 5,
              "maximum": 60,
              "default": 10
            }
          },
          {
            "name": "salesorg",
            "description": "SalesOrg used to determine correct periods (weeks and year) and first of day week and first week of year. Default is usually 1 and 1. This controls how the data is assigned to weeks in the result and how it is read on CGCloud cloud processing side.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 4
            }
          },
          {
            "name": "account",
            "description": "Filter for a selected Account ID",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255
            }
          },
          {
            "name": "product",
            "description": "Filter for a selected Product ID",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255
            }
          },
          {
            "name": "measure",
            "description": "Measure code as registered with the template api.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 4
            }
          },
          {
            "name": "date",
            "description": "A date within the week the data is requested for. Format  yyyy-mm-dd",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "value": {
                      "meta": {
                        "page": 0,
                        "keepalive": 10,
                        "pagesize": 1000,
                        "page_count": 10,
                        "this_page_count": 1000,
                        "total": 9990,
                        "request_id": "b0dbe87b-b781-5f63-4106-aed29c1fbf6a",
                        "originalurl": "/api/conditions/products/COGS?showmeta=true",
                        "links": {
                          "First": "/api/conditions/products/COGS?showmeta=true&request_id=b0dbe87b-b781-5f63-4106-aed29c1fbf6a&page=0",
                          "Last": "/api/conditions/products/COGS?showmeta=true&request_id=b0dbe87b-b781-5f63-4106-aed29c1fbf6a&page=9",
                          "Next": "/api/conditions/products/COGS?showmeta=true&request_id=b0dbe87b-b781-5f63-4106-aed29c1fbf6a&page=1"
                        },
                        "Week": 1
                      },
                      "measures": [
                        {
                          "acc": "Kroger_Store",
                          "prd": "Cola",
                          "value": 5
                        },
                        {
                          "acc": "Kroger_Store",
                          "prd": "Cola",
                          "value": 5
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/volumes/daily/{measure}/{date}": {
      "get": {
        "tags": [
          "Volumes Management"
        ],
        "description": "Request volumes for a given date. The measure code together with the measure template configuration determines if decimal or integer store will serve the results. The api uses pagination, see URI parameters. The API returns only a limited amount of rows (300000)\n\n**Permission Role:** Volumes read\n**Data Source Table Name depend on mesure code definition:** Daily Measure Int or Daily Measure Real",
        "parameters": [
          {
            "name": "per_page",
            "description": "Pagination parameter, records per page. Default is 10000",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1000,
              "maximum": 50000,
              "default": 10000
            }
          },
          {
            "name": "keepalive",
            "description": "Pagination parameter how long requested pages will be alive in minutes. Default is ten minutes.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 5,
              "maximum": 60,
              "default": 10
            }
          },
          {
            "name": "salesorg",
            "description": "SalesOrg used to determine correct periods (weeks and year) and first of day week and first week of year. Default is usually 1 and 1. This controls how the data is assigned to weeks in the result and how it is read on CGCloud cloud processing side.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 4
            }
          },
          {
            "name": "account",
            "description": "Filter for a selected Account ID",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255
            }
          },
          {
            "name": "product",
            "description": "Filter for a selected Product ID",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255
            }
          },
          {
            "name": "measure",
            "description": "Measure code as registered with the template api.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 4
            }
          },
          {
            "name": "date",
            "description": "Date the data is requested for. Format  yyyy-mm-dd",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "value": {
                      "meta": {
                        "page": 0,
                        "keepalive": 10,
                        "pagesize": 1000,
                        "page_count": 10,
                        "this_page_count": 1000,
                        "total": 9990,
                        "request_id": "b0dbe87b-b781-5f63-4106-aed29c1fbf6a",
                        "originalurl": "/api/conditions/products/COGS?showmeta=true",
                        "links": {
                          "First": "/api/conditions/products/COGS?showmeta=true&request_id=b0dbe87b-b781-5f63-4106-aed29c1fbf6a&page=0",
                          "Last": "/api/conditions/products/COGS?showmeta=true&request_id=b0dbe87b-b781-5f63-4106-aed29c1fbf6a&page=9",
                          "Next": "/api/conditions/products/COGS?showmeta=true&request_id=b0dbe87b-b781-5f63-4106-aed29c1fbf6a&page=1"
                        },
                        "date": "2016-01-31"
                      },
                      "measures": [
                        {
                          "acc": "Kroger_Store",
                          "prd": "Cola",
                          "value": 5
                        },
                        {
                          "acc": "Kroger_Store",
                          "prd": "Cola",
                          "value": 5
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/volumes/weeks/{measure}/{year}/{week}": {
      "get": {
        "tags": [
          "Volumes Management"
        ],
        "description": "Request volumes for a week of a year. The measure code together with the measure template configuration determines if decimal or integer store will serve the results. The api uses pagination, see URI. parameters. The API returns only a limited amount of rows (300000).\n\n**Permission Role:** Volumes read\n**Data Source Table Name depend on mesure code definition:** Weekly Measure Int or Weekly Measure Real",
        "parameters": [
          {
            "name": "per_page",
            "description": "Pagination parameter, records per page. Default is 10000",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1000,
              "maximum": 50000,
              "default": 10000
            }
          },
          {
            "name": "keepalive",
            "description": "Pagination parameter how long requested pages will be alive in minutes. Default is ten minutes.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 5,
              "maximum": 60,
              "default": 10
            }
          },
          {
            "name": "salesorg",
            "description": "SalesOrg used to determine correct periods and first of day week and first week of year.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 4
            }
          },
          {
            "name": "account",
            "description": "Filter for a selected Account ID",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255
            }
          },
          {
            "name": "product",
            "description": "Filter for a selected Product ID",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255
            }
          },
          {
            "name": "measure",
            "description": "Measure code as registered with the template api.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 4
            }
          },
          {
            "name": "year",
            "description": "Year in the fomat YYYY.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 4
            }
          },
          {
            "name": "week",
            "description": "Week of the year 1-52",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 52
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "value": {
                      "meta": {
                        "page": 0,
                        "keepalive": 10,
                        "pagesize": 1000,
                        "page_count": 10,
                        "this_page_count": 1000,
                        "total": 9990,
                        "request_id": "b0dbe87b-b781-5f63-4106-aed29c1fbf6a",
                        "originalurl": "/api/conditions/products/COGS?showmeta=true",
                        "links": {
                          "first": "/api/conditions/products/COGS?showmeta=true&request_id=b0dbe87b-b781-5f63-4106-aed29c1fbf6a&page=0",
                          "last": "/api/conditions/products/COGS?showmeta=true&request_id=b0dbe87b-b781-5f63-4106-aed29c1fbf6a&page=9",
                          "next": "/api/conditions/products/COGS?showmeta=true&request_id=b0dbe87b-b781-5f63-4106-aed29c1fbf6a&page=1"
                        },
                        "week": 1
                      },
                      "measures": [
                        {
                          "acc": "Kroger_Store",
                          "prd": "Cola",
                          "value": 5
                        },
                        {
                          "acc": "Kroger_Store",
                          "prd": "Cola",
                          "value": 5
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/volumes/weeks/integer/{date}": {
      "delete": {
        "tags": [
          "Volumes Management"
        ],
        "description": "Deletes volume information for a year ending before the given date will be deleted. The API is for reorganization and cleanup processes. The processing is async and creates a new transaction with the given id implicitely.\n\n**Permission Role:** Volumes delete\n**Data Source Table Name:** Weekly Measure Int",
        "parameters": [
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system. Can be used to request state of delete using transaction API. | An implicit transaction is created with the given id.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          },
          {
            "name": "date",
            "description": "Volumes before that date will be deleted (Period must be outside that date).",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "CASTransaction": 65456
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid URL parameters or invalid transaction id"
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/volumes/weeks/decimal/{date}": {
      "delete": {
        "tags": [
          "Volumes Management"
        ],
        "description": "Volume information for a year ending before the given date will be deleted. The API is for reorganization and cleanup processes. The processing is async and creates a new transaction with the given id implicitely.\n\n**Permission Role:** Volumes delete\n**Data Source Table Name:** Weekly Measure Real",
        "parameters": [
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system. Can be used to request state of delete using transaction api. | An implicit tansaction is created for the given transaction id.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          },
          {
            "name": "date",
            "description": "Volumes before that date will be deleted if before the corresponding year.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "CASTransaction": 6655
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid URL parameters or invalid transaction id"
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/volumes/remove/weeks/decimal/{measure}": {
      "delete": {
        "tags": [
          "Volumes Management"
        ],
        "description": "Delete real volumes which span the given time range with their particularly conditions. \n\n**Permission Role:** Volumes delete\n**Data Source Table Name:** Weekly Measure Real",
        "parameters": [
          {
            "name": "measure",
            "description": "Measure code as registered with the template api.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 4
            }
          },
          {
            "name": "datefrom",
            "description": "Only values which are not valid inside the timerange time can be deleted/removed",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "datethru",
            "description": "Only values which are not valid inside the timerange time can be deleted/removed",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system. Can be used to request state of delete using transaction api. | An implicit tansaction is created for the given transaction id. If no transaction is provided the system creates automaticallya new one",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Payload"
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "txid": "TX000000000000000123"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters for datefrom, datethru, ransactionid or datefrom > datethru"
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/volumes/remove/weeks/integer/{measure}": {
      "delete": {
        "tags": [
          "Volumes Management"
        ],
        "description": "Delete integer volumes which span the given time range with their particularly conditions. \n\n**Permission Role:** Volumes delete\n**Data Source Table Name:** Weekly Measure Int",
        "parameters": [
          {
            "name": "measure",
            "description": "Measure code as registered with the template api.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 4
            }
          },
          {
            "name": "datefrom",
            "description": "Only values which are not valid inside the timerange time can be deleted/removed",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "datethru",
            "description": "Only values which are not valid inside the timerange time can be deleted/removed",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system. Can be used to request state of delete using transaction api. | An implicit tansaction is created for the given transaction id. If no transaction is provided the system creates automaticallya new one",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Payload"
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "txid": "TX000000000000000123"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters for datefrom, datethru, ransactionid or datefrom > datethru"
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/volumes/daily/integer/{date}": {
      "delete": {
        "tags": [
          "Volumes Management"
        ],
        "description": "Volume information will be deleted before the month of the given date. The API is for reorganization and cleanup processes. The processing is async and creates a new transaction with the given id implicitely.\n\n**Permission Role:** Volumes delete\n**Data Source Table Name:** Daily Measure Int",
        "parameters": [
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system. Can be used to request state of delete using transaction API. | An implicit tansaction is created ob the givend transaction id.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          },
          {
            "name": "date",
            "description": "Volumes before that date will be deleted.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "CASTransaction": 65456
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid URL parameters or invalid transaction id"
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/volumes/daily/decimal/{date}": {
      "delete": {
        "tags": [
          "Volumes Management"
        ],
        "description": "Delete integer volumes older than the given date. The processing is async and creates a new transaction with the given id implicitely.\n\n**Permission Role:** Volumes delete\n**Data Source Table Name:** Daily Measure Real",
        "parameters": [
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system. Can be used to request state of delete using transaction api. | An implicit tansaction is created for the given transaction id.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          },
          {
            "name": "date",
            "description": "Volume information will be deleted before the month of the given date. The API is for reorganization and cleanup processes.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "CASTransaction": 6655
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid URL parameters or invalid transaction id"
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/volumes/remove/daily/decimal/{measure}": {
      "delete": {
        "tags": [
          "Volumes Management"
        ],
        "description": "Delete real volumes which span the given time range with their particularly conditions. \n\n**Permission Role:** Volumes delete\n**Data Source Table Name:** Daily Measure Real",
        "parameters": [
          {
            "name": "measure",
            "description": "Measure code as registered with the template api.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 4
            }
          },
          {
            "name": "datefrom",
            "description": "Only values which are not valid inside the timerange time can be deleted/removed",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "datethru",
            "description": "Only values which are not valid inside the timerange time can be deleted/removed",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system. Can be used to request state of delete using transaction api. | An implicit tansaction is created for the given transaction id. If no transaction is provided the system creates automaticallya new one",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Payload"
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "txid": "TX000000000000000123"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters for datefrom, datethru, ransactionid or datefrom > datethru"
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/volumes/remove/daily/integer/{measure}": {
      "delete": {
        "tags": [
          "Volumes Management"
        ],
        "description": "Delete integer volumes which span the given time range with their particularly conditions. \n\n**Permission Role:** Volumes delete\n**Data Source Table Name:** Daily Measure Int",
        "parameters": [
          {
            "name": "measure",
            "description": "Measure code as registered with the template api.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 4
            }
          },
          {
            "name": "datefrom",
            "description": "Only values which are not valid inside the timerange time can be deleted/removed",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "datethru",
            "description": "Only values which are not valid inside the timerange time can be deleted/removed",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system. Can be used to request state of delete using transaction api. | An implicit tansaction is created for the given transaction id. If no transaction is provided the system creates automaticallya new one",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Payload"
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "txid": "TX000000000000000123"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters for datefrom, datethru, ransactionid or datefrom > datethru"
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/volumes/promotions/weeks/week/decimal": {
      "post": {
        "tags": [
          "Volumes Management"
        ],
        "description": "Send Promotion/Tactic Specific Actuals (volumes) on week level with type decimal for a registered transaction.Year and week must be specified. Type: The template ID for the volumes .All messages send for a transaction must contain the same template type. Payload limit 30MB. Max value accepted is 2147483673.\nRequires CGCloud TPM Release v10. Tactic id in payload is optional: \"tac\" SF tactic id - string [18]\n\n\n**Permission Role:** Volumes write\n**Data Source Table Name:** Promotion Tactic Weekly Measure Real",
        "parameters": [
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "salesorg": {
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 4,
                    "pattern": "^[a-zA-Z0-9_-]+$"
                  },
                  "volumes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "year": {
                          "type": "number"
                        },
                        "week": {
                          "type": "number"
                        },
                        "rows": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "prd": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_-]+$"
                              },
                              "acc": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_-]+$"
                              },
                              "prm": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_-]+$"
                              },
                              "tac": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_-]+$"
                              },
                              "value": {
                                "type": "number",
                                "minimum": -2147483647,
                                "maximum": 2147483647
                              }
                            },
                            "required": [
                              "prd",
                              "acc",
                              "prm",
                              "value"
                            ]
                          }
                        }
                      },
                      "required": [
                        "year",
                        "week",
                        "rows"
                      ]
                    }
                  }
                },
                "required": [
                  "type",
                  "volumes"
                ],
                "example": {
                  "type": "b002",
                  "salesorg": "CL03",
                  "volumes": [
                    {
                      "year": 2016,
                      "week": 45,
                      "rows": [
                        {
                          "prd": "DgnDTabGayq04e38",
                          "acc": "d6Xs6iSEGosXVK2I",
                          "prm": "PRM10000001",
                          "tac": "TAC00500001",
                          "value": 1.23
                        },
                        {
                          "prd": "VEZALRvM4W3QKK4e",
                          "acc": "yx8tkgHDyXtcITey",
                          "prm": "PRM10000001",
                          "tac": "TAC00500001",
                          "value": 2.11
                        }
                      ]
                    },
                    {
                      "year": 2016,
                      "week": 46,
                      "rows": [
                        {
                          "prd": "GsKrne1GM1JWW1I9",
                          "acc": "99nVfm7T3y5MZhar",
                          "prm": "PRM10000001",
                          "tac": "TAC00500001",
                          "value": 3.45
                        },
                        {
                          "prd": "ZP6ZacEhf1AbNGJF",
                          "acc": "d151ihoxCpZe2N3M",
                          "prm": "PRM10000001",
                          "tac": "TAC00500001",
                          "value": 4.69
                        },
                        {
                          "prd": "ABC",
                          "acc": "XYZ",
                          "prm": "PRM10000001",
                          "value": 5.23
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "result": "Blocks received: 2",
                    "messageid": 515
                  }
                }
              }
            }
          },
          "400": {
            "description": "JSON format not as expected or no registered transaction."
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "A message has not the same type as other before or template is not registered or valid for a measure."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/volumes/promotions/weeks/{measure}/{date}": {
      "get": {
        "tags": [
          "Volumes Management"
        ],
        "description": "Request Promotion/Tactic Specific Actuals (volumes) for a week for a given date.  The measure code together with the measure template configuration determines if the result will be served by the integer or decimal store. The api uses pagination, see URI parameters. The API returns only a limited amount of rows (300000)\n\n**Permission Role:** Volumes read\n**Data Source Table Name:** Promotion Tactic Weekly Measure Real",
        "parameters": [
          {
            "name": "per_page",
            "description": "Pagination parameter, records per page. Default is 10000",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1000,
              "maximum": 50000,
              "default": 10000
            }
          },
          {
            "name": "promotion",
            "description": "Filter for a selected SF Promotion ID",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 18
            }
          },
          {
            "name": "keepalive",
            "description": "Pagination parameter how long requested pages will be alive in minutes. Default is ten minutes.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 5,
              "maximum": 60,
              "default": 10
            }
          },
          {
            "name": "salesorg",
            "description": "SalesOrg used to determine correct periods (weeks and year) and first of day week and first week of year. Default is usually 1 and 1. This controls how the data is assigned to weeks in the result and how it is read on CGCloud cloud processing side.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 4
            }
          },
          {
            "name": "account",
            "description": "Filter for a selected Account ID",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255
            }
          },
          {
            "name": "tactic",
            "description": "Filter for a selected SF Tactic ID",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 18
            }
          },
          {
            "name": "product",
            "description": "Filter for a selected Product ID",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255
            }
          },
          {
            "name": "measure",
            "description": "Measure code as registered with the template api.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 4
            }
          },
          {
            "name": "date",
            "description": "A date within the week the data is requested for. Format  yyyy-mm-dd",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "value": {
                      "measures": [
                        {
                          "value": 12.11,
                          "acc": "ACC00000002",
                          "prd": "PRD00000002",
                          "prm": "PRM10000003",
                          "tac": "TAC003000A2"
                        },
                        {
                          "value": 55.55,
                          "acc": "ACC00000002",
                          "prd": "PRD00000003",
                          "prm": "PRM10000003",
                          "tac": "TAC00500001"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/volumes/promotions/daily/{measure}/{date}": {
      "get": {
        "tags": [
          "Volumes Management"
        ],
        "description": "Request Promotion/Tactic Specific Actuals (volumes) for a given date. The measure code together with the measure template configuration determines if decimal or integer store will serve the results. The api uses pagination, see URI parameters. The API returns only a limited amount of rows (300000). Requires CGCloud TPM Release v10.\n\n**Permission Role:** Volumes read\n**Data Source Table Name:** Promotion Tactic Daily Measure Real",
        "parameters": [
          {
            "name": "per_page",
            "description": "Pagination paramete, records per page. Default is 10000",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1000,
              "maximum": 50000,
              "default": 10000
            }
          },
          {
            "name": "promotion",
            "description": "Filter for a selected SF Promotion ID",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 18
            }
          },
          {
            "name": "keepalive",
            "description": "Pagination parameter how long requested pages will be alive in minutes. Default is ten minutes.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 5,
              "maximum": 60,
              "default": 10
            }
          },
          {
            "name": "salesorg",
            "description": "SalesOrg used to determine correct periods (weeks and year) and first of day week and first week of year. Default is usually 1 and 1. This controls how the data is assigned to weeks in the result and how it is read on CGCloud cloud processing side.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 4
            }
          },
          {
            "name": "account",
            "description": "Filter for a selected Account ID",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255
            }
          },
          {
            "name": "tactic",
            "description": "Filter for a selected SF Tactic ID",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 18
            }
          },
          {
            "name": "product",
            "description": "Filter for a selected Product ID",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255
            }
          },
          {
            "name": "measure",
            "description": "Measure code as registered with the template api.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 4
            }
          },
          {
            "name": "date",
            "description": "Date the data is requested for. Format  yyyy-mm-dd",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "value": {
                      "measures": [
                        {
                          "value": 12.11,
                          "acc": "ACC00000002",
                          "prd": "PRD00000002",
                          "prm": "PRM10000003",
                          "tac": "TAC003000A2"
                        },
                        {
                          "value": 55.55,
                          "acc": "ACC00000002",
                          "prd": "PRD00000003",
                          "prm": "PRM10000003",
                          "tac": "TAC00500001"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/volumes/promotions/weeks/{measure}/{year}/{week}": {
      "get": {
        "tags": [
          "Volumes Management"
        ],
        "description": "Request Promotion/Tactic Specific Actuals (volumes) for a week of a year. The measure code together with the measure template configuration determines if decimal or integer store will serve the results. The api uses pagination, see URI. parameters. The API returns only a limited amount of rows (300000). Requires CGCloud TPM Release v10.\n\n**Permission Role:** Volumes read\n**Data Source Table Name:** Promotion Tactic Weekly Measure Real",
        "parameters": [
          {
            "name": "per_page",
            "description": "Pagination parameter, records per page. Default is 10000",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1000,
              "maximum": 50000,
              "default": 10000
            }
          },
          {
            "name": "promotion",
            "description": "Filter for a selected SF Promotion ID",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 18
            }
          },
          {
            "name": "keepalive",
            "description": "Pagination parameter how long requested pages will be alive in minutes. Default is ten minutes.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 5,
              "maximum": 60,
              "default": 10
            }
          },
          {
            "name": "salesorg",
            "description": "SalesOrg used to determine correct periods and first of day week and first week of year.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 4
            }
          },
          {
            "name": "account",
            "description": "Filter for a selected Account ID",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255
            }
          },
          {
            "name": "tactic",
            "description": "Filter for a selected SF Tactic ID",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 18
            }
          },
          {
            "name": "product",
            "description": "Filter for a selected Product ID",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255
            }
          },
          {
            "name": "measure",
            "description": "Measure code as registered with the template api.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 4
            }
          },
          {
            "name": "year",
            "description": "Year in the fomat YYYY.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 4
            }
          },
          {
            "name": "week",
            "description": "Week of the year 1-52",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 52
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "value": {
                      "measures": [
                        {
                          "value": 12.11,
                          "acc": "ACC00000002",
                          "prd": "PRD00000002",
                          "prm": "PRM10000003",
                          "tac": "TAC003000A2"
                        },
                        {
                          "value": 55.55,
                          "acc": "ACC00000002",
                          "prd": "PRD00000003",
                          "prm": "PRM10000003",
                          "tac": "TAC00500001"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/volumes/promotions/daily/decimal/{date}": {
      "delete": {
        "tags": [
          "Volumes Management"
        ],
        "description": "Delete Promotion/Tactic Specific Actuals (volumes) older than the given date. The processing is async and creates a new transaction with the given id implicitely.\n\n**Permission Role:** Volumes delete\n**Data Source Table Name:** Promotion Tactic Daily Measure Real",
        "parameters": [
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system. Can be used to request state of delete using transaction api. | An implicit tansaction is created for the given transaction id.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          },
          {
            "name": "date",
            "description": "Promotion/Tactic Specific Actuals (volumes) information will be deleted before the month of the given date. The API is for reorganization and cleanup processes.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "CASTransaction": 6655
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid URL parameters or invalid transaction id"
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/volumes/promotions/weeks/decimal/{date}": {
      "delete": {
        "tags": [
          "Volumes Management"
        ],
        "description": "Promotion/Tactic Specific Actuals (volumes) information for a year ending before the given date will be deleted. The API is for reorganization and cleanup processes. The processing is async and creates a new transaction with the given id implicitely.\n\n**Permission Role:** Volumes delete\n**Data Source Table Name:** Promotion Tactic Weekly Measure Real",
        "parameters": [
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system. Can be used to request state of delete using transaction api. | An implicit tansaction is created for the given transaction id.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          },
          {
            "name": "date",
            "description": "Promotion/Tactic Specific Actuals (volumes) before that date will be deleted if before the corresponding year.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "CASTransaction": 6655
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid URL parameters or invalid transaction id"
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/volumes/promotions/weeks/date/decimal": {
      "post": {
        "tags": [
          "Volumes Management"
        ],
        "description": "Send Promotion/Tactic Specific Actuals (volumes) on week level with type decimal values for a registered transaction. Start date: date of the volumes to assign to the right period (htts://tools.ietf.org/html/rfc3339#section-5.6). Type: The template ID for the volumes .All messages send for a transaction must contain the sametemplate type. Payload limit to 30MB. Max value accepted is 2147483673 and rounded of to the 7 place.    \n \"type\" and \"salesorg\" must be the same in all messages belonging to a transaction id.\n Requires CGCloud TPM Release v10. Tactic id in payload is optional: \"tac\" SF tactic id - string [18]\n\n\n**Permission Role:** Volumes write\n**Data Source Table Name:** Promotion Tactic Weekly Measure Real",
        "parameters": [
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "salesorg": {
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 4,
                    "pattern": "^[a-zA-Z0-9_-]+$"
                  },
                  "volumes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "startdate": {
                          "type": "string",
                          "format": "date"
                        },
                        "rows": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "prd": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_-]+$"
                              },
                              "acc": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_-]+$"
                              },
                              "prm": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_-]+$"
                              },
                              "tac": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_-]+$"
                              },
                              "value": {
                                "type": "number",
                                "minimum": -2147483647,
                                "maximum": 2147483647
                              }
                            },
                            "required": [
                              "prd",
                              "acc",
                              "prm",
                              "value"
                            ]
                          }
                        }
                      },
                      "required": [
                        "startdate",
                        "rows"
                      ]
                    }
                  }
                },
                "required": [
                  "type",
                  "volumes"
                ],
                "example": {
                  "type": "b002",
                  "salesorg": "CL03",
                  "volumes": [
                    {
                      "startdate": "2016-01-01",
                      "rows": [
                        {
                          "prd": "DgnDTabGayq04e38",
                          "acc": "d6Xs6iSEGosXVK2I",
                          "prm": "PRM10000001",
                          "tac": "TAC00500001",
                          "value": 1.23
                        },
                        {
                          "prd": "VEZALRvM4W3QKK4e",
                          "acc": "yx8tkgHDyXtcITey",
                          "prm": "PRM10000001",
                          "tac": "TAC00500001",
                          "value": 2.45
                        }
                      ]
                    },
                    {
                      "startdate": "2016-01-08",
                      "rows": [
                        {
                          "prd": "GsKrne1GM1JWW1I9",
                          "acc": "99nVfm7T3y5MZhar",
                          "prm": "PRM10000001",
                          "tac": "TAC00500001",
                          "value": 3.882
                        },
                        {
                          "prd": "ZP6ZacEhf1AbNGJF",
                          "acc": "d151ihoxCpZe2N3M",
                          "prm": "PRM10000001",
                          "tac": "TAC00500001",
                          "value": 4.12
                        },
                        {
                          "prd": "ABC",
                          "acc": "XYZ",
                          "prm": "PRM10000001",
                          "tac": "TAC00500001",
                          "value": 5
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "result": "Blocks received: 2",
                    "messageid": 515
                  }
                }
              }
            }
          },
          "400": {
            "description": "JSON format not as expected or no registered transaction."
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Not authorized, missing privilege for user. | A message has not the same type as other before or template is not registered orr valid for a measure."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/volumes/promotions/daily/date/decimal": {
      "post": {
        "tags": [
          "Volumes Management"
        ],
        "description": "Send Promotion/Tactic Specific Actuals (volumes) on day level with type decimal values for a registered transaction. Start date: date of the volumes to assign to the right period (htts://tools.ietf.org/html/rfc3339#section-5.6). Type: The template ID for the volumes .All messages send for a transaction must contain the sametemplate type. Payload limit to 30MB.\nRequires CGCloud TPM Release v10. Tactic id in payload is optional: \"tac\" SF tactic id - string [18]\n\n\n\n The maximum number for values which can be represented properly using double precision is -9007199254740992 or 9007199254740992. If your value exceeds the maximum number, it will be autimatically rounded or cut off. Please aware that you are responsible to handle such a huge number on your side to avoid rounding and cut off\n\n**Permission Role:** Volumes write\n**Data Source Table Name:** Promotion Tactic Daily Measure Real",
        "parameters": [
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "salesorg": {
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 4,
                    "pattern": "^[a-zA-Z0-9_-]+$"
                  },
                  "volumes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "startdate": {
                          "type": "string",
                          "format": "date"
                        },
                        "rows": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "prd": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_-]+$"
                              },
                              "acc": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_-]+$"
                              },
                              "prm": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_-]+$"
                              },
                              "tac": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_-]+$"
                              },
                              "value": {
                                "type": "number",
                                "minimum": -9007199254740992,
                                "maximum": 9007199254740992
                              }
                            },
                            "required": [
                              "prd",
                              "acc",
                              "prm",
                              "value"
                            ]
                          }
                        }
                      },
                      "required": [
                        "startdate",
                        "rows"
                      ]
                    }
                  }
                },
                "required": [
                  "type",
                  "volumes"
                ],
                "example": {
                  "type": "b002",
                  "salesorg": "CL03",
                  "volumes": [
                    {
                      "startdate": "2016-01-01",
                      "rows": [
                        {
                          "prd": "DgnDTabGayq04e38",
                          "acc": "d6Xs6iSEGosXVK2I",
                          "prm": "PRM10000001",
                          "tac": "TAC00500001",
                          "value": 1.23
                        },
                        {
                          "prd": "VEZALRvM4W3QKK4e",
                          "acc": "yx8tkgHDyXtcITey",
                          "prm": "PRM10000002",
                          "tac": "TAC00500001",
                          "value": 2.45
                        }
                      ]
                    },
                    {
                      "startdate": "2016-01-08",
                      "rows": [
                        {
                          "prd": "GsKrne1GM1JWW1I9",
                          "acc": "99nVfm7T3y5MZhar",
                          "prm": "PRM10000002",
                          "tac": "TAC00500001",
                          "value": 3.882
                        },
                        {
                          "prd": "ZP6ZacEhf1AbNGJF",
                          "acc": "d151ihoxCpZe2N3M",
                          "prm": "PRM10000002",
                          "tac": "TAC00500001",
                          "value": 4.12
                        },
                        {
                          "prd": "ABC",
                          "acc": "XYZ",
                          "value": 5
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "result": "Blocks received: 2",
                    "messageid": 515
                  }
                }
              }
            }
          },
          "400": {
            "description": "JSON format not as expected or no registered transaction."
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Not authorized, missing privilege for user. | A message has not the same type as other before or template is not registered orr valid for a measure."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/conditions/products/prices": {
      "post": {
        "tags": [
          "Condition Management"
        ],
        "description": "Send product prices for a registered transaction. Type within JSON payload must be a registered measure for product measures. If no datefrom or datethru is send default will be 1800-01-01 and 9999-12-31. Mixed mode without dates and dates is not supported. Without date is only supported for systems which don't support timebound values. Date from and date thru according to (https://tools.ietf.org/html/rfc3339#section-5.6). The API supports a complete mode given with the transaction, deleting all product conditions for products existing in the transaction.\n\n**Permission Role:** Conditions write\n**Data Source Table Name:** Product Measure",
        "parameters": [
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "type": "COGS",
                  "prices": [
                    {
                      "prd": "ProductID1",
                      "value": 5,
                      "datefrom": "2016-01-01",
                      "datethru": "2017-01-01"
                    },
                    {
                      "prd": "ProductID1",
                      "value": 5,
                      "datefrom": "2016-01-01",
                      "datethru": "2017-01-01"
                    },
                    {
                      "prd": "ProductID1",
                      "value": 75,
                      "datefrom": "2016-01-01",
                      "datethru": "2017-01-01"
                    }
                  ]
                },
                "type": "object",
                "additionalProperties": true,
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "prices": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {
                        "prd": {
                          "type": "string",
                          "pattern": "^[a-zA-Z0-9_-]+$"
                        },
                        "value": {
                          "type": "number",
                          "minimum": -2147483647,
                          "maximum": 2147483647
                        },
                        "datefrom": {
                          "type": "string",
                          "format": "date"
                        },
                        "datethru": {
                          "type": "string",
                          "format": "date"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "result": "Rows received: 3",
                    "messageid": 515
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid JSON format"
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "A message has not the same type as others received before or template is not registered. | code = 103 Message not same type code  =105 Template (type) not registered."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/conditions/products/discounts": {
      "post": {
        "tags": [
          "Condition Management"
        ],
        "description": "Send product discounts for a registered transaction. Type within JSON payload must be a registered measure for product measures. If no datefrom or datethru is send default will be 1800-01-01 and 9999-12-31. Mixed mode without dates and dates is not supported. Without date is only supported for systems which don't support timebound values. The API supports a complete mode given with the transaction, deleting all product conditions for products existing in the transaction. | Date from and date thru according to (https://tools.ietf.org/html/rfc3339#section-5.6).\n\n**Permission Role:** Conditions write\n**Data Source Table Name:** Product Measure",
        "parameters": [
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "type": "COGS",
                  "discounts": [
                    {
                      "prd": "ProductID1",
                      "value": 5,
                      "datefrom": "2016-01-01",
                      "datethru": "2017-01-01"
                    },
                    {
                      "prd": "ProductID1",
                      "value": 5,
                      "datefrom": "2016-01-01",
                      "datethru": "2017-01-01"
                    },
                    {
                      "prd": "ProductID1",
                      "value": 75,
                      "datefrom": "2016-01-01",
                      "datethru": "2017-01-01"
                    }
                  ]
                },
                "type": "object",
                "additionalProperties": true,
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "discounts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {
                        "prd": {
                          "type": "string",
                          "pattern": "^[a-zA-Z0-9_-]+$"
                        },
                        "value": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 100
                        },
                        "datefrom": {
                          "type": "string",
                          "format": "date"
                        },
                        "datethru": {
                          "type": "string",
                          "format": "date"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "result": "Rows received: 3",
                    "messageid": 515
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid JSON format"
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "A message has not the same type as others received before or template is not registered. | code = 103 Message not same type code = 105 Template (type) not registered."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/conditions/accounts/discounts": {
      "post": {
        "tags": [
          "Condition Management"
        ],
        "description": "Send account discounts for a registered transaction. Type within JSON payload must be a registered measure for product measures. If no datefrom or datethru is send default will be 1800-01-01 and 9999-12-31. Mixed mode without dates and dates is not supported. Without date is only supported for systems which don't support timebound values. The API supports a complete mode given with the transaction, deleting all account conditions for account existing in the transaction.| Date from and date thru according to (https://tools.ietf.org/html/rfc3339#section-5.6).\n\n**Permission Role:** Conditions write\n**Data Source Table Name:** Account Measure",
        "parameters": [
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "type": "COGS",
                  "discounts": [
                    {
                      "acc": "AccountID1",
                      "value": 5,
                      "datefrom": "2016-01-01",
                      "datethru": "2017-01-01"
                    },
                    {
                      "acc": "AccountID2",
                      "value": 5,
                      "datefrom": "2016-01-01",
                      "datethru": "2017-01-01"
                    },
                    {
                      "acc": "AccountID3",
                      "value": 75,
                      "datefrom": "2016-01-01",
                      "datethru": "2017-01-01"
                    }
                  ]
                },
                "type": "object",
                "additionalProperties": true,
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "discounts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {
                        "acc": {
                          "type": "string",
                          "pattern": "^[a-zA-Z0-9_-]+$"
                        },
                        "value": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 100
                        },
                        "datefrom": {
                          "type": "string",
                          "format": "date"
                        },
                        "datethru": {
                          "type": "string",
                          "format": "date"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "result": "Rows received: 3",
                    "messageid": 515
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid JSON format"
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "A message has not the same type as others received before or template is not registered. | code = 103 Message not same type code = 105 Template (type) not registered."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/conditions/accounts/costs": {
      "post": {
        "tags": [
          "Condition Management"
        ],
        "description": "Send account costs for a registered transaction. Type within JSON payload must be a registered measure for product measures. If no datefrom or datethru is send default will be 1800-01-01 and 9999-12-31. Mixed mode without dates and dates is not supported. Without date is only supported for systems which don't support timebound values. The API supports a complete mode given with the transaction, deleting all account conditions for account existing in the transaction.| Date from and date thru according to (https://tools.ietf.org/html/rfc3339#section-5.6).\n\n**Permission Role:** Conditions write\n**Data Source Table Name:** Account Measure",
        "parameters": [
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "type": "COGS",
                  "costs": [
                    {
                      "acc": "AccountID1",
                      "value": 5.1,
                      "datefrom": "2016-01-01",
                      "datethru": "2017-01-01"
                    },
                    {
                      "acc": "AccountID2",
                      "value": 5.23,
                      "datefrom": "2016-01-01",
                      "datethru": "2017-01-01"
                    },
                    {
                      "acc": "AccountID3",
                      "value": 75.11,
                      "datefrom": "2016-01-01",
                      "datethru": "2017-01-01"
                    }
                  ]
                },
                "type": "object",
                "additionalProperties": true,
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "costs": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {
                        "acc": {
                          "type": "string",
                          "pattern": "^[a-zA-Z0-9_-]+$"
                        },
                        "value": {
                          "type": "number",
                          "minimum": -2147483647,
                          "maximum": 2147483647
                        },
                        "datefrom": {
                          "type": "string",
                          "format": "date"
                        },
                        "datethru": {
                          "type": "string",
                          "format": "date"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "result": "Rows received: 3",
                    "messageid": 515
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid JSON format"
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "A message has not the same type as others received before or template is not registered. | code = 103 Message not same type code = 105 Template (type) not registered."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/conditions/accountsproducts/prices": {
      "post": {
        "tags": [
          "Condition Management"
        ],
        "description": "Send account/products prices for a registered transaction. Type within JSON payload must be a registered measure for product measures. If no datefrom or datethru is send default will be 1800-01-01 and 9999-12-31. Mixed mode without dates and dates is not supported. Without date is only supported for systems which don't support timebound values. The API supports a complete mode given with the transaction, deleting all account/product conditions for account/products existing in the transaction.| Date from and date thru according to (https://tools.ietf.org/html/rfc3339#section-5.6).\n\n**Permission Role:** Conditions write\n**Data Source Table Name:** Account Poduct Measure",
        "parameters": [
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "type": "COGS",
                  "prices": [
                    {
                      "acc": "AccountID1",
                      "prd": "ProductD1",
                      "value": 5.1,
                      "datefrom": "2016-01-01",
                      "datethru": "2017-01-01"
                    },
                    {
                      "acc": "AccountID2",
                      "prd": "ProductD2",
                      "value": 5.23,
                      "datefrom": "2016-01-01",
                      "datethru": "2017-01-01"
                    },
                    {
                      "acc": "AccountID3",
                      "prd": "ProductD4",
                      "value": 75.11,
                      "datefrom": "2016-01-01",
                      "datethru": "2017-01-01"
                    }
                  ]
                },
                "type": "object",
                "additionalProperties": true,
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "prices": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {
                        "prd": {
                          "type": "string",
                          "pattern": "^[a-zA-Z0-9_-]+$"
                        },
                        "acc": {
                          "type": "string",
                          "pattern": "^[a-zA-Z0-9_-]+$"
                        },
                        "value": {
                          "type": "number",
                          "minimum": -2147483647,
                          "maximum": 2147483647
                        },
                        "datefrom": {
                          "type": "string",
                          "format": "date"
                        },
                        "datethru": {
                          "type": "string",
                          "format": "date"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "result": "Rows received: 3",
                    "messageid": 515
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid JSON format"
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "A message has not the same type as others received before or template is not registered. | code = 103 Message not same type code = 105 Template (type) not registered."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/conditions/accountsproducts/costs": {
      "post": {
        "tags": [
          "Condition Management"
        ],
        "description": "Send account/products costs for a registered transaction. Type within JSON payload must be a registered measure for product measures.If no datefrom or datethru is send default will be 1800-01-01 and 9999-12-31. Mixed mode without dates and dates is not supported. Without date is only supported for systems which don't support timebound values. The API supports a complete mode given with the transaction, deleting all account/product conditions for account/products existing in the transaction.| Date from and date thru according to (https://tools.ietf.org/html/rfc3339#section-5.6).\n\n**Permission Role:** Conditions write\n**Data Source Table Name:** Account Poduct Measure",
        "parameters": [
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "type": "COGS",
                  "costs": [
                    {
                      "acc": "AccountID1",
                      "prd": "ProductD1",
                      "value": 5.1,
                      "datefrom": "2016-01-01",
                      "datethru": "2017-01-01"
                    },
                    {
                      "acc": "AccountID2",
                      "prd": "ProductD2",
                      "value": 5.23,
                      "datefrom": "2016-01-01",
                      "datethru": "2017-01-01"
                    },
                    {
                      "acc": "AccountID3",
                      "prd": "ProductD4",
                      "value": 75.11,
                      "datefrom": "2016-01-01",
                      "datethru": "2017-01-01"
                    }
                  ]
                },
                "type": "object",
                "additionalProperties": true,
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "costs": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {
                        "prd": {
                          "type": "string",
                          "pattern": "^[a-zA-Z0-9_-]+$"
                        },
                        "acc": {
                          "type": "string",
                          "pattern": "^[a-zA-Z0-9_-]+$"
                        },
                        "value": {
                          "type": "number",
                          "minimum": -2147483647,
                          "maximum": 2147483647
                        },
                        "datefrom": {
                          "type": "string",
                          "format": "date"
                        },
                        "datethru": {
                          "type": "string",
                          "format": "date"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "result": "Rows received: 3",
                    "messageid": 515
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid JSON format"
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "A message has not the same type as others received before or template is not registered. | code = 103 Message not same type code = 105 Template (type) not registered."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/conditions/accountsproducts/{measure}": {
      "get": {
        "tags": [
          "Condition Management"
        ],
        "description": "Request accounts product measures for a measure type. The api uses pagination, see URI parameters. The API returns only a limited amount of rows (300000)\n\n**Permission Role:** Conditions read\n**Data Source Table Name:** Account Poduct Measure",
        "parameters": [
          {
            "name": "per_page",
            "description": "Pagination parameter, records per page. Default is 10000",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1000,
              "maximum": 50000,
              "default": 10000
            }
          },
          {
            "name": "considerpromotions",
            "description": "The flag controls if promotion and tactic measures will also be selected. For non-promotion related conditions promotion and tactic id will return null.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "showmeta",
            "description": "Show the pagination meta header within the payload.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "keepalive",
            "description": "Pagination parameter how long requested pages will be alive in minutes.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 5,
              "maximum": 60,
              "default": 10
            }
          },
          {
            "name": "account",
            "description": "A filter for a certain account id.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255
            }
          },
          {
            "name": "today",
            "description": "Without any value to receive measures for the current date.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product",
            "description": "An optional filter to select only values for a single or multiple product ids. Multiple product ids are passed comma separated without spaces in between. Limited to 30 product ids.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 999
            }
          },
          {
            "name": "measure",
            "description": "measure code which must be configured to be used with account products.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 4
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "value": {
                      "typical": {
                        "meta": {
                          "page": 0,
                          "keepalive": 10,
                          "pagesize": 1000,
                          "page_count": 10,
                          "this_page_count": 1000,
                          "total": 9990,
                          "request_id": "b0dbe87b-b781-5f63-4106-aed29c1fbf6a",
                          "originalurl": "/api/conditions/products/COGS?showmeta=true",
                          "links": {
                            "First": "/api/conditions/products/COGS?showmeta=true&request_id=b0dbe87b-b781-5f63-4106-aed29c1fbf6a&page=0",
                            "Last": "/api/conditions/products/COGS?showmeta=true&request_id=b0dbe87b-b781-5f63-4106-aed29c1fbf6a&page=9",
                            "Next": "/api/conditions/products/COGS?showmeta=true&request_id=b0dbe87b-b781-5f63-4106-aed29c1fbf6a&page=1"
                          }
                        },
                        "measures": [
                          {
                            "acc": "Kroger_Store",
                            "prd": "Cola",
                            "value": 5,
                            "datefrom": "2016-09-22",
                            "datethru": "2015-09-28"
                          },
                          {
                            "acc": "Kroger_Store",
                            "prd": "Cola",
                            "value": 5,
                            "datefrom": "2016-09-22",
                            "datethru": "2015-09-28"
                          }
                        ]
                      },
                      "considerpromotion_true": {
                        "meta": {
                          "page": 0,
                          "keepalive": 10,
                          "pagesize": 1000,
                          "page_count": 10,
                          "this_page_count": 1000,
                          "total": 9990,
                          "request_id": "b0dbe87b-b781-5f63-4106-aed29c1fbf6a",
                          "originalurl": "/api/conditions/products/COGS?showmeta=true",
                          "links": {
                            "First": "/api/conditions/products/COGS?showmeta=true&request_id=b0dbe87b-b781-5f63-4106-aed29c1fbf6a&page=0",
                            "Last": "/api/conditions/products/COGS?showmeta=true&request_id=b0dbe87b-b781-5f63-4106-aed29c1fbf6a&page=9",
                            "Next": "/api/conditions/products/COGS?showmeta=true&request_id=b0dbe87b-b781-5f63-4106-aed29c1fbf6a&page=1"
                          }
                        },
                        "measures": [
                          {
                            "acc": "Kroger_Store",
                            "prd": "Cola",
                            "prm": "PRM9838097673292876",
                            "tac": "TCT9838097673292876",
                            "value": 5,
                            "datefrom": "2016-09-22",
                            "datethru": "2015-09-28"
                          },
                          {
                            "acc": "Kroger_Store",
                            "prd": "Cola",
                            "prm": null,
                            "tac": null,
                            "value": 5,
                            "datefrom": "2016-09-22",
                            "datethru": "2015-09-28"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "code = 103 A message has not the same type as other received before, code = 105 Measure is not registered or not valid for use."
          },
          "403": {
            "description": "Not allowed to request."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Condition Management"
        ],
        "description": "Delete measures for products per accounts based on measure type. An implicit transaction is created based on the given transaction id, status of delete transaction can be checked using transaction api. The API is for reorganization and cleanup processes.\n\n**Permission Role:** Conditions delete\n**Data Source Table Name:** Account Poduct Measure",
        "parameters": [
          {
            "name": "deletefromeq",
            "description": "Only conditions with the exact datefrom will be deleted.Can not be used together with datefrom or datethru parameter. Conditions in the past should not be deleted to avoid system inconsistency with already calculated promotions.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "datefrom",
            "description": "Only conditions which are not valid at that point in time can be delete. Date must be in the future. Can not be combined with datethru.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "datethru",
            "description": "Only conditions valid before that date will be deleted. Can not be combined with datefrom.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "considerpromotions",
            "description": "If true also conditions related to promotions will be deleted. Be ware they created within the promotion process on force.com side.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "account",
            "description": "Only conditions for the selected account will be affected.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255
            }
          },
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 4
            }
          },
          {
            "name": "product",
            "description": "Only conditions for the selected product will be affected.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255
            }
          },
          {
            "name": "measure",
            "description": "measure code which must be configured to be used with account products.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 4
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "CASTransaction": 512
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Measure type not valid (code = 102)"
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/conditions/accountsproducts": {
      "delete": {
        "tags": [
          "Condition Management"
        ],
        "description": "Delete conditions in bulk mode for accountsproducts. Status of delete transaction can be checked using transaction API. Maximal 1000 combinations are supported.\n\n**Permission Role:** Conditions delete\n**Data Source Table Name:** Account Poduct Measure",
        "parameters": [
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system. An implicit transaction is created based on the given transaction id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "measure": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 4,
                      "pattern": "^[a-zA-Z0-9_-]+$"
                    },
                    "acc": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "pattern": "^[a-zA-Z0-9_-]+$"
                    },
                    "prd": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "pattern": "^[a-zA-Z0-9_-]+$"
                    },
                    "datefrom": {
                      "type": "string",
                      "format": "date"
                    },
                    "datethru": {
                      "type": "string",
                      "format": "date"
                    },
                    "deletefromeq": {
                      "type": "string",
                      "format": "date"
                    },
                    "considerpromotions": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "measure"
                  ]
                },
                "minItems": 1,
                "maxItems": 1000,
                "example": [
                  {
                    "measure": "COGS",
                    "acc": "ACC00000001",
                    "prd": "PRD00000001"
                  },
                  {
                    "measure": "COGS",
                    "acc": "ACC00000001",
                    "prd": "PRD00000005"
                  },
                  {
                    "measure": "COGS",
                    "prd": "PRD00000002"
                  },
                  {
                    "measure": "COGS",
                    "acc": "ACC00000001"
                  },
                  {
                    "measure": "COGS",
                    "acc": "ACC00000001",
                    "prd": "PRD00000006",
                    "datefrom": "2019-01-01"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "CASTransaction": 512
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Measure type not valid (code = 102)"
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/conditions/accounts": {
      "delete": {
        "tags": [
          "Condition Management"
        ],
        "description": "Delete conditions in bulk mode for account maures. Status of delete transaction can be checked using transaction API. Maximal 1000 combinations are supported.\n\n**Permission Role:** Conditions delete\n**Data Source Table Name:** Account Measure",
        "parameters": [
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system. An implicit transaction is created based on the given transaction id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "measure": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 4,
                      "pattern": "^[a-zA-Z0-9_-]+$"
                    },
                    "acc": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "pattern": "^[a-zA-Z0-9_-]+$"
                    },
                    "datefrom": {
                      "type": "string",
                      "format": "date"
                    },
                    "datethru": {
                      "type": "string",
                      "format": "date"
                    },
                    "deletefromeq": {
                      "type": "string",
                      "format": "date"
                    }
                  },
                  "required": [
                    "measure"
                  ]
                },
                "minItems": 1,
                "maxItems": 1000,
                "example": [
                  {
                    "measure": "COGS",
                    "acc": "ACC00000001"
                  },
                  {
                    "measure": "COGS",
                    "acc": "ACC00000001"
                  },
                  {
                    "measure": "COGS",
                    "acc": "ACC00000001"
                  },
                  {
                    "measure": "COGS",
                    "acc": "ACC00000001",
                    "datefrom": "2019-01-01"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "CASTransaction": 512
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Measure type not valid (code = 102)"
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/conditions/products": {
      "delete": {
        "tags": [
          "Condition Management"
        ],
        "description": "Delete conditions in bulk mode for product measures. Status of delete transaction can be checked using transaction API. Maximal 1000 combinations are supported.\n\n**Permission Role:** Conditions delete\n**Data Source Table Name:** Product Measure",
        "parameters": [
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system. An implicit transaction is created based on the given transaction id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "measure": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 4,
                      "pattern": "^[a-zA-Z0-9_-]+$"
                    },
                    "prd": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "pattern": "^[a-zA-Z0-9_-]+$"
                    },
                    "datefrom": {
                      "type": "string",
                      "format": "date"
                    },
                    "datethru": {
                      "type": "string",
                      "format": "date"
                    },
                    "deletefromeq": {
                      "type": "string",
                      "format": "date"
                    }
                  },
                  "required": [
                    "measure"
                  ]
                },
                "minItems": 1,
                "maxItems": 1000,
                "example": [
                  {
                    "measure": "COGS",
                    "prd": "PRD00000001"
                  },
                  {
                    "measure": "COGS",
                    "prd": "PRD00000001"
                  },
                  {
                    "measure": "COGS",
                    "prd": "PRD00000001"
                  },
                  {
                    "measure": "COGS",
                    "prd": "PRD00000001",
                    "datefrom": "2019-01-01"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "CASTransaction": 512
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Measure type not valid (code = 102)"
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/conditions/accounts/{measure}": {
      "get": {
        "tags": [
          "Condition Management"
        ],
        "description": "Request account measures for a measure. The api uses pagination, see URI parameters. The API returns only a limited amount of rows (300000)\n\n**Permission Role:** Conditions read\n**Data Source Table Name:** Account Measure",
        "parameters": [
          {
            "name": "per_page",
            "description": "Pagination parameter, records per page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1000,
              "maximum": 50000,
              "default": 10000
            }
          },
          {
            "name": "showmeta",
            "description": "Show the pagination meta header within the payload.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "keepalive",
            "description": "Pagination parameter how long requested pages will be alive in minutes.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 5,
              "maximum": 60,
              "default": 10
            }
          },
          {
            "name": "account",
            "description": "A filter for a certain account id.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255
            }
          },
          {
            "name": "today",
            "description": "Without any value to receive measures for the current date.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "measure",
            "description": "measure code which must be configured to use for account products.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 4
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "value": {
                      "meta": {
                        "page": 0,
                        "keepalive": 10,
                        "pagesize": 1000,
                        "page_count": 10,
                        "this_page_count": 1000,
                        "total": 9990,
                        "request_id": "b0dbe87b-b781-5f63-4106-aed29c1fbf6a",
                        "originalurl": "/api/conditions/products/COGS?showmeta=true",
                        "links": {
                          "First": "/api/conditions/products/COGS?showmeta=true&request_id=b0dbe87b-b781-5f63-4106-aed29c1fbf6a&page=0",
                          "Last": "/api/conditions/products/COGS?showmeta=true&request_id=b0dbe87b-b781-5f63-4106-aed29c1fbf6a&page=9",
                          "Next": "/api/conditions/products/COGS?showmeta=true&request_id=b0dbe87b-b781-5f63-4106-aed29c1fbf6a&page=1"
                        }
                      },
                      "measures": [
                        {
                          "acc": "Kroger_Store",
                          "value": 5,
                          "datefrom": "2016-09-22",
                          "datethru": "2015-09-28"
                        },
                        {
                          "acc": "Kroger_Store",
                          "value": 5,
                          "datefrom": "2016-09-22",
                          "datethru": "2015-09-28"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "code = 103 A message has not the same type as other received before, code = 105 Measure template is not registered or not valid for use."
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Not allowed to request."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Condition Management"
        ],
        "description": "Delete measures for accounts based on measure type. An implicit transaction is created based on the given transaction id, status of delete transaction can be checked using transaction api. The API is for reorganization and cleanup processes.\n\n**Permission Role:** Conditions delete\n**Data Source Table Name:** Account Measure",
        "parameters": [
          {
            "name": "deletefromeq",
            "description": "Only conditions with the exact datefrom will be deleted.Can not be used together with datefrom or datethru parameter. Conditions in the past should not be deleted to avoid system inconsistency with already calculated promotions.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "datefrom",
            "description": "Only conditions which are not valid at that point in time can be delete. Date must be in the future. Can not be combined with datethru.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "datethru",
            "description": "Only conditions valid before that date will be deleted. Can not be combined with datefrom.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "account",
            "description": "Only conditions for the selected account will be affected.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255
            }
          },
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 4
            }
          },
          {
            "name": "measure",
            "description": "measure code which must be configured to use for account products.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 4
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "CASTransaction": 512
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invaid URL parameters."
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Measure type not valid (code = 102)"
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/conditions/products/{measure}": {
      "get": {
        "tags": [
          "Condition Management"
        ],
        "description": "Request product measures for a measure type. The api uses pagination, see URI parameters. The API returns only a limited amount of rows (300000)\n\n**Permission Role:** Conditions read\n**Data Source Table Name:** Product Measure",
        "parameters": [
          {
            "name": "per_page",
            "description": "Pagination parameter, records per page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1000,
              "maximum": 50000,
              "default": 10000
            }
          },
          {
            "name": "showmeta",
            "description": "Show the pagination meta header within the payload.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "keepalive",
            "description": "Pagination parameter how long requested pages will be alive in minutes.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 5,
              "maximum": 60,
              "default": 10
            }
          },
          {
            "name": "today",
            "description": "Without any value to receive measures for the current date.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product",
            "description": "An optional filter to select only values for a single or multiple product ids. Multiple product ids are passed comma separated without spaces in between. Limited to 30 product ids.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 999
            }
          },
          {
            "name": "measure",
            "description": "measure code which must be configured to use for account products.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 4
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "value": {
                      "meta": {
                        "page": 0,
                        "keepalive": 10,
                        "pagesize": 1000,
                        "page_count": 10,
                        "this_page_count": 1000,
                        "total": 9990,
                        "request_id": "b0dbe87b-b781-5f63-4106-aed29c1fbf6a",
                        "originalurl": "/api/conditions/products/COGS?showmeta=true",
                        "links": {
                          "First": "/api/conditions/products/COGS?showmeta=true&request_id=b0dbe87b-b781-5f63-4106-aed29c1fbf6a&page=0",
                          "Last": "/api/conditions/products/COGS?showmeta=true&request_id=b0dbe87b-b781-5f63-4106-aed29c1fbf6a&page=9",
                          "Next": "/api/conditions/products/COGS?showmeta=true&request_id=b0dbe87b-b781-5f63-4106-aed29c1fbf6a&page=1"
                        }
                      },
                      "measures": [
                        {
                          "prd": "Kroger_Store",
                          "value": 5,
                          "datefrom": "2016-09-22",
                          "datethru": "2015-09-28"
                        },
                        {
                          "prd": "Kroger_Store",
                          "value": 5,
                          "datefrom": "2016-09-22",
                          "datethru": "2015-09-28"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "code = 105 Measure is not registered or not valid for use."
          },
          "403": {
            "description": "Not allowed to request."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Condition Management"
        ],
        "description": "Delete measures for products based on measure type. An implicit transaction is created based on the given transaction id, status of delete transaction can be checked using transaction API. The API is for reorganization and cleanup processes\n\n**Permission Role:** Conditions delete\n**Data Source Table Name:** Product Measure",
        "parameters": [
          {
            "name": "deletefromeq",
            "description": "Only conditions with the exact datefrom will be deleted.Can not be used together with datefrom or datethru parameter. Conditions in the past should not be deleted to avoid system inconsistency with already calculated promotions.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "datefrom",
            "description": "Only conditions which are not valid at that point in time can be delete. Date must be in the future. Can not be combined with datethru.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "datethru",
            "description": "Only conditions valid before that date will be deleted. Can not be combined with datefrom.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "transaction",
            "description": "Transaction id specified by the sending system.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 4
            }
          },
          {
            "name": "product",
            "description": "Only conditions for the selected product will be affected.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255
            }
          },
          {
            "name": "measure",
            "description": "measure code which must be configured to use for account products.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 4
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "CASTransaction": 512
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invaid URL parameters."
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Measure type not valid (code = 102)"
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v2/accountplans/{accountid}/year/{year}/list": {
      "get": {
        "tags": [
          "Accountplan Management"
        ],
        "description": "Request data for a selected account and year. Return product and none product related KPIs.\n\n**Permission Role:** Accountplans read",
        "parameters": [
          {
            "name": "measure",
            "description": "An optional filter to select only values for a single or multiple measure codes. Multiple measure codes are passed comma separated without spaces in between. Limited to 60 measure codes.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 299
            }
          },
          {
            "name": "timeblock",
            "description": "Controls if weekly, monthly or custom measures will be returned. This is not an aggregation, it depends on the measure configuration in the TPM engine.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "week",
                "month",
                "customperiod"
              ],
              "default": "week"
            }
          },
          {
            "name": "per_page",
            "description": "Pagination parameter, records per page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1000,
              "maximum": 50000,
              "default": 10000
            }
          },
          {
            "name": "showmeta",
            "description": "Show the pagination meta header within the payload.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "keepalive",
            "description": "Pagination parameter how long requested pages will be alive in minutes.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 5,
              "maximum": 60,
              "default": 10
            }
          },
          {
            "name": "productlevel",
            "description": "An optional filter so select only values for a selected productlevel, e.g. \"brand\".",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          },
          {
            "name": "salesorg",
            "description": "Only one sales org is supported.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountid",
            "description": "External ID  of an account object from sales force.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 255
            }
          },
          {
            "name": "year",
            "description": "4-digit year like 2015, or 2017.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 4
            }
          },
          {
            "name": "If-Match",
            "description": "Defines a precondition to send and calculate a result only if accountplan was not changed.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "ETag": {
                "description": "A hash representing the last change of any KPI.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "value": {
                      "measures": [
                        {
                          "measurecode": "M020",
                          "prd": "PRD00000001",
                          "value": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12,
                            13,
                            14,
                            15,
                            16,
                            17,
                            18,
                            19,
                            20,
                            21,
                            22,
                            23,
                            24,
                            25,
                            26,
                            27,
                            28,
                            29,
                            30,
                            31,
                            32,
                            33,
                            34,
                            35,
                            36,
                            37,
                            38,
                            39,
                            40,
                            41,
                            42,
                            43,
                            44,
                            45,
                            46,
                            47,
                            48,
                            49,
                            50,
                            51,
                            52
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Not authorized, missing privilege for user."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v2/accountplans/changed/{datetime}": {
      "post": {
        "tags": [
          "Accountplan Management"
        ],
        "description": "Request a list of account plans which have been changed since the given date and time.\n\n**Permission Role:** Accountplans read",
        "parameters": [
          {
            "name": "salesorg",
            "description": "An optional filter to select account plans for a given sales org. Maximal up to 3 sales orgs comma separated.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 14
            }
          },
          {
            "name": "datetime",
            "description": "Date and time of the last change. Format YYYY-MM-DD HH:MI:SS Example 2017-07-17 10:12:06",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 19,
              "maxLength": 19
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": [
                    {
                      "acc": "ACC00000001",
                      "year": 2016
                    },
                    {
                      "acc": "ACC00000002",
                      "year": 2016
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Not authorized, missing privilege for user."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/accountplans/changed": {
      "post": {
        "tags": [
          "Accountplan Management"
        ],
        "description": "Request a list of account plans which have been changed since compared with the send list of accountplans, year and ETAGs. \n\n**Permission Role:** Accountplans read",
        "parameters": [
          {
            "name": "salesorg",
            "description": "An optional filter to select account plans for a given sales org. Maximal up to 3 sales orgs comma separated.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 14
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  {
                    "acc": "ACC00000001",
                    "year": 2016,
                    "etag": "b8ece36310ca57accfca490015d8294dfd7fedc3f9b5ea140396bf358491075i"
                  },
                  {
                    "acc": "ACC00000001",
                    "year": 2015,
                    "etag": ""
                  }
                ],
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "acc": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255,
                      "pattern": "^[a-zA-Z0-9_-]+$"
                    },
                    "year": {
                      "type": "number"
                    },
                    "etag": {
                      "type": "string",
                      "minLength": 0,
                      "maxLength": 64,
                      "pattern": "^$|^[a-zA-Z0-9_-]+$"
                    }
                  },
                  "required": [
                    "acc",
                    "year",
                    "etag"
                  ]
                },
                "minItems": 1
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": [
                    {
                      "acc": "ACC00000001",
                      "year": 2016,
                      "etag": "b8ece36310ca57accfca490015d8294dfd7fedc3f9b5ea140396bf358491075b"
                    },
                    {
                      "acc": "ACC00000001",
                      "year": 2015,
                      "etag": "ca78bb41c18216169fec5f74223117ddc8b5143d9a0cc0191b9116052efd2505"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Not authorized, missing privilege for user."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/promotions": {
      "get": {
        "tags": [
          "Promotion Management"
        ],
        "description": "Request all available promotion processed within CGCloud Processing Engine.\n\n**Permission Role:** Promotions read",
        "parameters": [
          {
            "name": "salesorg",
            "description": "Filter promotions for a given sales org. Maximum three sales orgs can be specified comma separated.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 13
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": [
                    {
                      "prm": "PRM10000001"
                    },
                    {
                      "prm": "PRM10000002"
                    },
                    {
                      "prm": "PRM10000003"
                    },
                    {
                      "prm": "PRM10000005"
                    },
                    {
                      "prm": "PRM00000001"
                    },
                    {
                      "prm": "PRM00000002"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Not authorized, missing privilege for user."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v2/promotions/changed/{datetime}": {
      "post": {
        "tags": [
          "Promotion Management"
        ],
        "description": "Defaults request a list of promotions which have been changed since the given date and time.\n With using the optional query parameter datethru, you are able to request a promotion list for a certain time frame (datefrom until datethru) e.g.  X >= {datetime} and X <= datethru. \n\n**Permission Role:** Promotions read",
        "parameters": [
          {
            "name": "datethru",
            "description": "Date and time of the last change. Format YYYY-MM-DD HH:MI:SS Example 2020-06-19 17:47:44",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 19,
              "maxLength": 19
            }
          },
          {
            "name": "salesorg",
            "description": "Filter promotions for a given sales org. Maximal up to 3 sales orgs comma separated.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 13
            }
          },
          {
            "name": "datetime",
            "description": "Date and time of the last change. Format YYYY-MM-DD HH:MI:SS Example 2020-06-19 17:47:45",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 19,
              "maxLength": 19
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": [
                    {
                      "prm": "a2b2X00000Aaq2nQAB",
                      "datechanged": "2020-06-19 17:47:44"
                    },
                    {
                      "prm": "a2b2X00000Aaq1mQAB",
                      "datechanged": "2020-06-19 17:47:45"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid datetime format or invalid salesorg"
          },
          "403": {
            "description": "Not authorized, missing privilege for user."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/promotions/changed": {
      "post": {
        "tags": [
          "Promotion Management"
        ],
        "description": "Request a list of promotions which have been changed since compared with the send list of promotions and ETAGs. \n\n**Permission Role:** Promotions read",
        "parameters": [
          {
            "name": "salesorg",
            "description": "Filter promotions for a given sales org. Maximum three sales orgs can be specified comma separated.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 13
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  {
                    "prm": "PRM00000001",
                    "etag": "b8ece36310ca57accfca490015d8294dfd7fedc3f9b5ea140396bf358491075i"
                  },
                  {
                    "prm": "PRM00000001",
                    "etag": "d4ece36310ca57accfca490015d8294dfd7fedc3f9b5ea140396bf35849107d"
                  }
                ],
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "prm": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 30,
                      "pattern": "^[a-zA-Z0-9_-]+$"
                    },
                    "etag": {
                      "type": "string",
                      "minLength": 0,
                      "maxLength": 64,
                      "pattern": "^$|^[a-zA-Z0-9_-]+$"
                    }
                  },
                  "required": [
                    "prm",
                    "etag"
                  ]
                },
                "minItems": 1
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": [
                    {
                      "prm": "PRM00000001",
                      "etag": "b8ece36310ca57accfca490015d8294dfd7fedc3f9b5ea140396bf358491075b"
                    },
                    {
                      "prm": "PRM00000001",
                      "etag": "ca78bb41c18216169fec5f74223117ddc8b5143d9a0cc0191b9116052efd2505"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Not authorized, missing privilege for user."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v2/promotions/{promotionid}/aggregation": {
      "get": {
        "tags": [
          "Promotion Management"
        ],
        "description": "Request data for a single promotion and promotion level KPIS using pagination. Total value for a measure and product for measures on promotion level.\n\n**Permission Role:** Promotions read\n",
        "parameters": [
          {
            "name": "measure",
            "description": "An optional filter to select only values for a single or multiple measure codes. Multiple measure codes are passed comma separated without spaces in between. Limited to 60 measure codes.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 299
            }
          },
          {
            "name": "per_page",
            "description": "Pagination parameter, records per page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1000,
              "maximum": 50000,
              "default": 10000
            }
          },
          {
            "name": "showmeta",
            "description": "Show the pagination meta header within the payload.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "keepalive",
            "description": "Pagination parameter how long requested pages will be alive in minutes.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 5,
              "maximum": 60,
              "default": 10
            }
          },
          {
            "name": "productlevel",
            "description": "An optional filter so select only values for a selected productlevel, e.g. \"brand\".",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          },
          {
            "name": "salesorg",
            "description": "Only one sales org is supported.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promotionid",
            "description": "Sales Force ID of the promotion (Promotion__c.Id).",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "value": {
                      "measures": [
                        {
                          "prd": "ID00000001",
                          "measurecode": "COGS",
                          "value": 72.9277
                        },
                        {
                          "prd": "ID00000002",
                          "measurecode": "COGS",
                          "value": 459.659
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Not authorized, missing privilege for user."
          },
          "404": {
            "description": "Promotion not found"
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v2/promotions/{promotionid}/all/list": {
      "get": {
        "tags": [
          "Promotion Management"
        ],
        "description": "Request data for a single promotion. Promotion and tactic level KPIS using pagination. Return proudct and none product related KPIs.\n\n**Permission Role:** Promotions read",
        "parameters": [
          {
            "name": "measure",
            "description": "An optional filter to select only values for a single or multiple measure codes. Multiple measure codes are passed comma separated without spaces in between. Limited to 60 measure codes.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 299
            }
          },
          {
            "name": "timeblock",
            "description": "Controls if weekly, monthly or custom measures will be returned. This is not an aggregation. Depends on the measure configuration in the TPM engine. For using calendar weeks, valid parametres are 'week' or 'month'. For using custom calendar, valid parameters are 'customperiod' or 'month'. ",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "week",
                "month",
                "customperiod"
              ],
              "default": "week"
            }
          },
          {
            "name": "per_page",
            "description": "Pagination parameter, records per page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1000,
              "maximum": 50000,
              "default": 10000
            }
          },
          {
            "name": "showmeta",
            "description": "Show the pagination meta header within the payload.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "keepalive",
            "description": "Pagination parameter how long requested pages will be alive in minutes.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 5,
              "maximum": 60,
              "default": 10
            }
          },
          {
            "name": "productlevel",
            "description": "An optional filter so select only values for a selected productlevel, e.g. \"brand\".",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          },
          {
            "name": "salesorg",
            "description": "Only one sales org is supported.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promotionid",
            "description": "Sales Force ID of the promotion (Promotion__c.Id).",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "description": "Defines a precondition to send and calculate a result only if promotion was not changed.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "ETag": {
                "description": "A hash representing the last change of any KPI.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "value": {
                      "measures": [
                        {
                          "measurecode": "M001",
                          "tac": "TAC003000A2",
                          "prd": "PRD00000001",
                          "from": "201601",
                          "value": [
                            1,
                            2,
                            3,
                            null,
                            5
                          ]
                        },
                        {
                          "measurecode": "M002",
                          "prd": "PRD00000002",
                          "tac": "",
                          "from": "201601",
                          "value": [
                            1,
                            2,
                            3,
                            null,
                            5
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Not authorized, missing privilege for user."
          },
          "404": {
            "description": "Promotion not found"
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v2/promotions/{promotionid}/aggregation/totals/list": {
      "get": {
        "tags": [
          "Promotion Management"
        ],
        "description": "Returns the total values for KPIs over all products for all periods spanning the promotion runtime. That means for every returned KPI (not filtered out by parameter), the system will return the aggregated value over all assigned products. This happens always on promotion level. Tactic level KPIs will also be aggregated to promotion level.\n\n**Permission Role:** Promotions read",
        "parameters": [
          {
            "name": "measure",
            "description": "An optional filter to select only values for a single or multiple measure codes. Multiple measure codes are passed comma separated without spaces in between. Limited to 60 measure codes.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 299
            }
          },
          {
            "name": "timeblock",
            "description": "Controls if weekly, monthly or custom measures will be returned. This is not an aggregation. Depends on the measure configuration in the TPM engine. For using calendar weeks, valid parametres are 'week' or 'month'. For using custom calendar, valid parameters are 'customperiod' or 'month'. ",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "week",
                "month",
                "customperiod"
              ],
              "default": "week"
            }
          },
          {
            "name": "salesorg",
            "description": "Only one sales org is supported.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productlevel",
            "description": "An optional filter so select only values for a selected productlevel, e.g. \"Brand\".",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20,
              "default": "Product"
            }
          },
          {
            "name": "promotionid",
            "description": "Sales Force ID of the promotion (Promotion__c.Id).",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "description": "Defines a precondition to send and calculate a result only if promotions was not changed.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "ETag": {
                "description": "A hash representing the last change of any KPI.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "measures": [
                      {
                        "measure": "M020",
                        "from": "201506",
                        "total": 420,
                        "value": [
                          30,
                          30,
                          30,
                          30,
                          null,
                          null,
                          null,
                          null,
                          60,
                          60,
                          60,
                          60,
                          60
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request e.g. salesorg not found, invalid timeblock, invalid measure type, invalid product level format, invalid promotion or tacrtic id format"
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Not authorized, missing privilege for user."
          },
          "404": {
            "description": "Promotion not found"
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/promotions/{promotionid}/tactics": {
      "get": {
        "tags": [
          "Promotion Management"
        ],
        "description": "Request available tatctics for a selected promotion.\n\n**Permission Role:** Promotions read",
        "parameters": [
          {
            "name": "promotionid",
            "description": "Sales Force ID of the promotion (Promotion__c.Id).",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "description": "Defines a precondition to send and calculate a result only if promotions was not changed.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "ETag": {
                "description": "A hash representing the last change of any KPI.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": [
                    {
                      "tac": "TAC00200002",
                      "datefrom": "2016-02-01",
                      "datethru": "2016-02-15"
                    },
                    {
                      "tac": "TAC00200002",
                      "datefrom": "2016-02-01",
                      "datethru": "2016-02-15"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Not authorized, missing privilege for user."
          },
          "404": {
            "description": "Promotion not found"
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v2/promotions/{promotionid}/tactics/{tacticid}/list": {
      "get": {
        "tags": [
          "Promotion Management"
        ],
        "description": "Request data for a single tactic of a promotion using pagination. The result will have one record as list per period year, measure and product of a tactic.\n**Permission Role:** Promotions read\n",
        "parameters": [
          {
            "name": "measure",
            "description": "An optional filter to select only values for a single or multiple measure codes. Multiple measure codes are passed comma separated without spaces in between. Limited to 60 measure codes.  Return proudct and none product related KPIs.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 299
            }
          },
          {
            "name": "timeblock",
            "description": "Controls if weekly, monthly or custom measures will be returned. This is not an aggregation. Depends on the measure configuration in the TPM engine. For using calendar weeks, valid parametres are 'week' or 'month'. For using custom calendar, valid parameters are 'customperiod' or 'month'. ",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "week",
                "month",
                "customperiod"
              ],
              "default": "week"
            }
          },
          {
            "name": "per_page",
            "description": "Pagination parameter, records per page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1000,
              "maximum": 50000,
              "default": 10000
            }
          },
          {
            "name": "showmeta",
            "description": "Show the pagination meta header within the payload.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "keepalive",
            "description": "Pagination parameter how long requested pages will be alive in minutes.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 5,
              "maximum": 60,
              "default": 10
            }
          },
          {
            "name": "salesorg",
            "description": "Only one sales org is supported.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productlevel",
            "description": "An optional filter so select only values for a selected productlevel, e.g. \"brand\".",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          },
          {
            "name": "promotionid",
            "description": "Sales Force ID of the promotion (Promotion__c.Id).",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tacticid",
            "description": "Sales Force ID of the tactic.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "description": "Defines a precondition to send and calculate a result only if promotions was not changed.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "ETag": {
                "description": "A hash representing the last change of any KPI.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "measures": [
                      {
                        "measurecode": "M020",
                        "prd": "PRD00000006",
                        "from": "201506",
                        "value": [
                          10,
                          10,
                          10,
                          10,
                          10
                        ]
                      },
                      {
                        "measurecode": "M021",
                        "prd": "PRD00000005",
                        "from": "201506",
                        "value": [
                          20,
                          20,
                          20,
                          20,
                          20
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request e.g. salesorg not found, invalid timeblock, invalid measure type, invalid product level format, invalid promotion or tacrtic id format"
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Not authorized, missing privilege for user."
          },
          "404": {
            "description": "Promotion not found"
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v2/promotions/{promotionid}/aggregation/tactics/{tacticid}": {
      "get": {
        "tags": [
          "Promotion Management"
        ],
        "description": "Request data for a single tactic of a promotion using pagination. Total value for a measure and product for measures on tactic level.\n\n**Permission Role:** Promotions read",
        "parameters": [
          {
            "name": "measure",
            "description": "An optional filter to select only values for a single or multiple measure codes. Multiple measure codes are passed comma separated without spaces in between. Limited to 60 measure codes.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 299
            }
          },
          {
            "name": "per_page",
            "description": "Pagination parameter, records per page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1000,
              "maximum": 50000,
              "default": 10000
            }
          },
          {
            "name": "showmeta",
            "description": "Show the pagination meta header within the payload.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "keepalive",
            "description": "Pagination parameter how long requested pages will be alive in minutes.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 5,
              "maximum": 60,
              "default": 10
            }
          },
          {
            "name": "productlevel",
            "description": "An optional filter so select only values for a selected productlevel, e.g. \"brand\".",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          },
          {
            "name": "salesorg",
            "description": "Only one sales org is supported.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 4
            }
          },
          {
            "name": "promotionid",
            "description": "Sales Force ID of the promotion (Promotion__c.Id).",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tacticid",
            "description": "Sales Force ID of the tactic.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "value": {
                      "measures": [
                        {
                          "prm": "PRM00000001",
                          "tac": "TAC00000001",
                          "prd": "ID00000001",
                          "measurecode": "COGS",
                          "value": 72.9277
                        },
                        {
                          "prm": "PRM00000001",
                          "tac": "TAC00000001",
                          "prd": "ID00000002",
                          "measurecode": "COGS",
                          "value": 459.659
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Not authorized, missing privilege for user."
          },
          "404": {
            "description": "Promotion not found"
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v2/promotions/{promotionid}/products": {
      "get": {
        "tags": [
          "Promotion Management"
        ],
        "description": "This API provides for a given promotion id for each tactic and promotion header level a list of products which created at least one writeback.\n\n**Permission Role:** Promotions read",
        "parameters": [
          {
            "name": "timeblock",
            "description": "Controls if weekly, monthly or custom measures will be returned. This is not an aggregation. Depends on the measure configuration in the TPM engine. For using calendar weeks, valid parametres are 'week' or 'month'. For using custom calendar, valid parameters are 'customperiod' or 'month'. ",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "week",
                "month",
                "customperiod"
              ],
              "default": "week"
            }
          },
          {
            "name": "salesorg",
            "description": "Only one sales org is supported.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productlevel",
            "description": "An optional filter so select only values for a selected productlevel, e.g. \"brand\".",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          },
          {
            "name": "keepalive",
            "description": "Pagination parameter how long requested pages will be alive in minutes.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 5,
              "maximum": 60,
              "default": 10
            }
          },
          {
            "name": "per_page",
            "description": "Pagination parameter, records per page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1000,
              "maximum": 50000,
              "default": 10000
            }
          },
          {
            "name": "showmeta",
            "description": "Show the pagination meta header within the payload.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "promotionid",
            "description": "Sales Force ID of the promotion (Promotion__c.Id).",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "measures": [
                      {
                        "prd": "ID00000008",
                        "tac": ""
                      },
                      {
                        "prd": "ID00000002",
                        "tac": "TAC00000001"
                      },
                      {
                        "prd": "ID00000001",
                        "tac": "TAC00000001"
                      },
                      {
                        "prd": "ID00000005",
                        "tac": "TAC00000001"
                      },
                      {
                        "prd": "ID00000010",
                        "tac": "TAC00000001"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid salesorg"
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Not authorized, missing privilege for user."
          },
          "404": {
            "description": "Promotion not found."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/support/accounts": {
      "get": {
        "tags": [
          "Support Management"
        ],
        "description": "Get accounts available and successfully transferred into CGCloud Processing services internal structures. Result is limited to 100.000 accounts.\n\n**Permission Role:** Support",
        "parameters": [
          {
            "name": "filter",
            "description": "Filter on external ID. All IDs starting with the filter string will are selected.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "maxLength": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": [
                    {
                      "sfid": "SF1",
                      "externalid": "ACC00000001"
                    },
                    {
                      "sfid": "SF2",
                      "externalid": "ACC00000002"
                    },
                    {
                      "sfid": "SF3",
                      "externalid": "ACC00000003"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Filter longer as 30 characters."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/support/products": {
      "get": {
        "tags": [
          "Support Management"
        ],
        "description": "Get products available and successfully transferred into CGCloud Processing services internal structures. Result is limited to 100.000 products.\n\n**Permission Role:** Support",
        "parameters": [
          {
            "name": "filter",
            "description": "Filter on external ID. All IDs starting with the filter string will are selected.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "maxLength": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": [
                    {
                      "sfid": "SF1",
                      "externalid": "ACC00000001"
                    },
                    {
                      "sfid": "SF2",
                      "externalid": "ACC00000002"
                    },
                    {
                      "sfid": "SF3",
                      "externalid": "ACC00000003"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Filter longer as 30 characters."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/support/volumes/weeklymeasureint": {
      "get": {
        "tags": [
          "Support Management"
        ],
        "description": "Support API to analyze internal datastructures for integer values organized weekly. This API is only for support and can be changed without notice. Support privilege is required to use that API. The API is limited to 100.000 rows and uses pagination.\n\n**Permission Role:** Support",
        "parameters": [
          {
            "name": "measure",
            "description": "List of measures comma separated. Maximum 10 measure codes.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 49
            }
          },
          {
            "name": "year",
            "description": "Year of the requested measures. e.g. 2016",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 4
            }
          },
          {
            "name": "account",
            "description": "List of account ID, maximum 30 id's supported.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 329
            }
          },
          {
            "name": "product",
            "description": "List of product ID, maximum 30 id's supported.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 329
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "measures": [
                      {
                        "acc": "ACC00000001",
                        "prd": "PRD00000009",
                        "row": {
                          "accountid": 1,
                          "productid": 9,
                          "periodid": 5559,
                          "measurecode": "WI",
                          "week1": 11,
                          "week2": null,
                          "week3": null,
                          "week4": null,
                          "week5": null,
                          "week6": null,
                          "week7": null,
                          "week8": null,
                          "week9": null,
                          "week10": null,
                          "week11": null,
                          "week12": null,
                          "week13": null,
                          "week14": null,
                          "week15": null,
                          "week16": null,
                          "week17": null,
                          "week18": null,
                          "week19": null,
                          "week20": null,
                          "week21": null,
                          "week22": null,
                          "week23": null,
                          "week24": null,
                          "week25": null,
                          "week26": null,
                          "week27": null,
                          "week28": null,
                          "week29": null,
                          "week30": null,
                          "week31": null,
                          "week32": null,
                          "week33": null,
                          "week34": null,
                          "week35": null,
                          "week36": null,
                          "week37": null,
                          "week38": null,
                          "week39": null,
                          "week40": null,
                          "week41": null,
                          "week42": null,
                          "week43": null,
                          "week44": null,
                          "week45": null,
                          "week46": null,
                          "week47": null,
                          "week48": null,
                          "week49": null,
                          "week50": null,
                          "week51": null,
                          "week52": null,
                          "week53": null,
                          "week54": null
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/support/volumes/weeklymeasurereal": {
      "get": {
        "tags": [
          "Support Management"
        ],
        "description": "Support API to analyze internal datastructures for decimal values organized weekly. This API is only for support and can be changed without notice. Support privilege is required to use that API. The API is limited to 100.000 rows and uses pagination.\n\n**Permission Role:** Support",
        "parameters": [
          {
            "name": "measure",
            "description": "List of measures comma separated. Maximum 10 measure codes.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 49
            }
          },
          {
            "name": "year",
            "description": "Year of the requested measures. e.g. 2016",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 4
            }
          },
          {
            "name": "account",
            "description": "List of account ID, maximum 30 id's supported.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 329
            }
          },
          {
            "name": "product",
            "description": "List of product ID, maximum 30 id's supported.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 329
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "measures": [
                      {
                        "acc": "ACC00000002",
                        "prd": "PRD00000003",
                        "row": {
                          "accountid": 2,
                          "productid": 3,
                          "periodid": 5559,
                          "measurecode": "WD",
                          "week1": null,
                          "week2": null,
                          "week3": null,
                          "week4": null,
                          "week5": null,
                          "week6": null,
                          "week7": null,
                          "week8": null,
                          "week9": null,
                          "week10": null,
                          "week11": null,
                          "week12": null,
                          "week13": null,
                          "week14": null,
                          "week15": null,
                          "week16": null,
                          "week17": null,
                          "week18": null,
                          "week19": null,
                          "week20": -345.2,
                          "week21": null,
                          "week22": null,
                          "week23": null,
                          "week24": null,
                          "week25": null,
                          "week26": null,
                          "week27": null,
                          "week28": null,
                          "week29": null,
                          "week30": null,
                          "week31": null,
                          "week32": null,
                          "week33": null,
                          "week34": null,
                          "week35": null,
                          "week36": null,
                          "week37": null,
                          "week38": null,
                          "week39": null,
                          "week40": null,
                          "week41": null,
                          "week42": null,
                          "week43": null,
                          "week44": null,
                          "week45": null,
                          "week46": null,
                          "week47": null,
                          "week48": null,
                          "week49": null,
                          "week50": null,
                          "week51": null,
                          "week52": null,
                          "week53": null,
                          "week54": null
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/support/volumes/dailymeasureint": {
      "get": {
        "tags": [
          "Support Management"
        ],
        "description": "Support API to analyze internal datastructures for integer values organized weekly. This API is only for support and can be changed without notice. Support privilege is required to use that API. The API is limited to 100.000 rows and uses pagination.\n\n**Permission Role:** Support",
        "parameters": [
          {
            "name": "measure",
            "description": "List of measures comma separated. Maximum 10 measure codes.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 49
            }
          },
          {
            "name": "year",
            "description": "Year of the requested measures. e.g. 2016",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 4
            }
          },
          {
            "name": "month",
            "description": "Month of the requested measures. e.g. 1, 10",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 2
            }
          },
          {
            "name": "account",
            "description": "List of account ID, maximum 30 id's supported.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 329
            }
          },
          {
            "name": "product",
            "description": "List of product ID, maximum 30 id's supported.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 329
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "measures": [
                      {
                        "acc": "ACC00000008",
                        "prd": "PRD00000001",
                        "month": 2,
                        "row": {
                          "accountid": 8,
                          "productid": 1,
                          "periodid": 21402,
                          "measurecode": "DI",
                          "day1": null,
                          "day2": null,
                          "day3": null,
                          "day4": null,
                          "day5": null,
                          "day6": null,
                          "day7": null,
                          "day8": 3,
                          "day9": null,
                          "day10": null,
                          "day11": null,
                          "day12": null,
                          "day13": null,
                          "day14": null,
                          "day15": null,
                          "day16": null,
                          "day17": null,
                          "day18": null,
                          "day19": null,
                          "day20": null,
                          "day21": null,
                          "day22": null,
                          "day23": null,
                          "day24": null,
                          "day25": null,
                          "day26": null,
                          "day27": null,
                          "day28": null,
                          "day29": null,
                          "day30": null,
                          "day31": null
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/support/volumes/dailymeasurereal": {
      "get": {
        "tags": [
          "Support Management"
        ],
        "description": "Support API to analyze internal datastructures for decimal values organized weekly. This API is only for support and can be changed without notice. Support privilege is required to use that API. The API is limited to 100.000 rows and uses pagination.\n\n**Permission Role:** Support",
        "parameters": [
          {
            "name": "measure",
            "description": "List of measures comma separated. Maximum 10 measure codes.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 49
            }
          },
          {
            "name": "year",
            "description": "Year of the requested measures. e.g. 2016",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 4
            }
          },
          {
            "name": "month",
            "description": "Month of the requested measures. e.g. 1, 10",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 2
            }
          },
          {
            "name": "account",
            "description": "List of account ID, maximum 30 id's supported.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 329
            }
          },
          {
            "name": "product",
            "description": "List of product ID, maximum 30 id's supported.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 329
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "measures": [
                      {
                        "acc": "ACC00000001",
                        "prd": "PRD00000003",
                        "month": 2,
                        "row": {
                          "accountid": 1,
                          "productid": 3,
                          "periodid": 21391,
                          "measurecode": "DD",
                          "day1": null,
                          "day2": null,
                          "day3": null,
                          "day4": null,
                          "day5": null,
                          "day6": null,
                          "day7": null,
                          "day8": null,
                          "day9": null,
                          "day10": null,
                          "day11": 777.3434,
                          "day12": null,
                          "day13": null,
                          "day14": null,
                          "day15": null,
                          "day16": null,
                          "day17": null,
                          "day18": null,
                          "day19": null,
                          "day20": null,
                          "day21": null,
                          "day22": null,
                          "day23": null,
                          "day24": null,
                          "day25": null,
                          "day26": null,
                          "day27": null,
                          "day28": null,
                          "day29": null,
                          "day30": null,
                          "day31": null
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/support/volumes/promotiontacticweeklymeasurereal": {
      "get": {
        "tags": [
          "Support Management"
        ],
        "description": "Support API to analyze internal datastructures for decimal values organized weekly. This API is only for support and can be changed without notice. Support privilege is required to use that API. The API is limited to 300.000 rows and uses pagination. Requires CGCloud TPM Release v10.\n\n**Permission Role:** Support",
        "parameters": [
          {
            "name": "measure",
            "description": "List of measures comma separated. Maximum 10 measure codes.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 49
            }
          },
          {
            "name": "year",
            "description": "Year of the requested measures. e.g. 2016",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 4
            }
          },
          {
            "name": "account",
            "description": "List of account ID, maximum 30 id's supported.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 329
            }
          },
          {
            "name": "product",
            "description": "List of product ID, maximum 30 id's supported.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 329
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "measures": [
                      {
                        "acc": "ACC00000002",
                        "prd": "PRD00000003",
                        "row": {
                          "promotionid": "PRM10000003",
                          "tacticid": "TAC003000A2",
                          "accountid": 2,
                          "productid": 3,
                          "periodid": 5559,
                          "measurecode": "WD",
                          "week1": null,
                          "week2": null,
                          "week3": null,
                          "week4": null,
                          "week5": null,
                          "week6": null,
                          "week7": null,
                          "week8": null,
                          "week9": null,
                          "week10": null,
                          "week11": null,
                          "week12": null,
                          "week13": null,
                          "week14": null,
                          "week15": null,
                          "week16": null,
                          "week17": null,
                          "week18": null,
                          "week19": null,
                          "week20": -345.2,
                          "week21": null,
                          "week22": null,
                          "week23": null,
                          "week24": null,
                          "week25": null,
                          "week26": null,
                          "week27": null,
                          "week28": null,
                          "week29": null,
                          "week30": null,
                          "week31": null,
                          "week32": null,
                          "week33": null,
                          "week34": null,
                          "week35": null,
                          "week36": null,
                          "week37": null,
                          "week38": null,
                          "week39": null,
                          "week40": null,
                          "week41": null,
                          "week42": null,
                          "week43": null,
                          "week44": null,
                          "week45": null,
                          "week46": null,
                          "week47": null,
                          "week48": null,
                          "week49": null,
                          "week50": null,
                          "week51": null,
                          "week52": null,
                          "week53": null,
                          "week54": null
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/support/volumes/promotiontacticdailymeasurereal": {
      "get": {
        "tags": [
          "Support Management"
        ],
        "description": "Support API to analyze internal datastructures for decimal values organized weekly. This API is only for support and can be changed without notice. Support privilege is required to use that API. The API is limited to 300.000 rows and uses pagination. Requires CGCloud TPM Release v10.\n\n**Permission Role:** Support",
        "parameters": [
          {
            "name": "measure",
            "description": "List of measures comma separated. Maximum 10 measure codes.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 49
            }
          },
          {
            "name": "year",
            "description": "Year of the requested measures. e.g. 2016",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 4
            }
          },
          {
            "name": "month",
            "description": "Month of the requested measures. e.g. 1, 10",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 2
            }
          },
          {
            "name": "account",
            "description": "List of account ID, maximum 30 id's supported.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 329
            }
          },
          {
            "name": "product",
            "description": "List of product ID, maximum 30 id's supported.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 329
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "measures": [
                      {
                        "acc": "ACC00000001",
                        "prd": "PRD00000003",
                        "month": 2,
                        "row": {
                          "promotionid": "PRM10000003",
                          "tacticid": "TAC003000A2",
                          "accountid": 1,
                          "productid": 3,
                          "periodid": 21391,
                          "measurecode": "DD",
                          "day1": null,
                          "day2": null,
                          "day3": null,
                          "day4": null,
                          "day5": null,
                          "day6": null,
                          "day7": null,
                          "day8": null,
                          "day9": null,
                          "day10": null,
                          "day11": 777.3434,
                          "day12": null,
                          "day13": null,
                          "day14": null,
                          "day15": null,
                          "day16": null,
                          "day17": null,
                          "day18": null,
                          "day19": null,
                          "day20": null,
                          "day21": null,
                          "day22": null,
                          "day23": null,
                          "day24": null,
                          "day25": null,
                          "day26": null,
                          "day27": null,
                          "day28": null,
                          "day29": null,
                          "day30": null,
                          "day31": null
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/support/accounts/{id}/summary": {
      "get": {
        "tags": [
          "Support Management"
        ],
        "description": "List all dependency like accounts, accountproducts, volumes (weekly and daily) with type integer or decimal related to a given account.\n\n**Permission Role:** Support",
        "parameters": [
          {
            "name": "year",
            "description": "Filter for a given year. Default is the current year.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 4
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "value": {
                      "acc": "ACC00000001",
                      "accounts": [
                        {
                          "measurecode": "COGS",
                          "value": 0,
                          "datefrom": "2016-01-01",
                          "datethru": "2017-02-01"
                        },
                        {
                          "measurecode": "COGS",
                          "value": 5,
                          "datefrom": "2017-02-02",
                          "datethru": "2018-01-01"
                        }
                      ],
                      "accountsproducts": [
                        {
                          "prd": "PRD00000001",
                          "prdsfid": "SF1",
                          "prm": null,
                          "tac": null,
                          "measurecode": "COGS",
                          "value": 1,
                          "datefrom": "2018-01-01",
                          "datethru": "2019-01-31"
                        }
                      ],
                      "volumesweeksinteger": [
                        {
                          "prd": "PRD00000001",
                          "prdsfid": "SF1",
                          "datefrom": "2015-12-27",
                          "datethru": "2016-12-24",
                          "calendaryear": 2016,
                          "measurecode": "WI",
                          "week11": 888
                        }
                      ],
                      "volumesweeksdecimal": [
                        {
                          "prd": "PRD00000001",
                          "prdsfid": "SF1",
                          "datefrom": "2015-12-27",
                          "datethru": "2016-12-24",
                          "calendaryear": 2016,
                          "measurecode": "WD",
                          "week7": 222.3434
                        }
                      ],
                      "volumesdailyinteger": [
                        {
                          "prd": "PRD00000001",
                          "prdsfid": "SF1",
                          "datefrom": "2016-01-01",
                          "datethru": "2016-01-31",
                          "calendaryear": 2016,
                          "measurecode": "DD",
                          "day17": 5656
                        }
                      ],
                      "volumesdailydecimal": [
                        {
                          "prd": "PRD00000001",
                          "prdsfid": "SF1",
                          "datefrom": "2016-01-01",
                          "datethru": "2016-01-31",
                          "calendaryear": 2016,
                          "measurecode": "DD",
                          "day1": 1.1
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/users": {
      "get": {
        "tags": [
          "User Management"
        ],
        "description": "Get all registered users",
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": [
                    {
                      "id": 450,
                      "active": true,
                      "user_id": "005580000018P03453",
                      "organization_id": "00Q5856700cbyPEAQ",
                      "username": "john.doe@company.com"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User for given id not found."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      },
      "post": {
        "deprecated": false,
        "tags": [
          "User Management"
        ],
        "description": "This API is deprecated. Please use CGCloud Operational Portal to add a new user. Add a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "organization_id": "02D580567801byPEAj",
                  "user_id": "015684567818P5GAAD",
                  "name": "john.doe@company.com",
                  "privileges": {
                    "TRANSACTION_REGISTER_EXPLICIT": true,
                    "TEMPLATE_MEASURES_WRITE": true,
                    "TEMPLATE_MEASURES_READ": true,
                    "TEMPLATE_VOLUMES_WRITE": true,
                    "TEMPLATE_VOLUMES_READ": true,
                    "CONDITIONS_WRITE": true,
                    "CONDITIONS_READ": true,
                    "CONDITIONS_DELETE": true,
                    "USERS_MANAGE": true,
                    "USERS_READ": true,
                    "VOLUMES_WRITE": true,
                    "VOLUMES_DELETE": true,
                    "PROMOTIONS_READ": true,
                    "SUPPORT": true,
                    "ACCOUNTPLANS_READ": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid JSON format."
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Not authorized, missing privilege for user."
          },
          "409": {
            "description": "User already exists."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/users/{id}": {
      "put": {
        "deprecated": false,
        "tags": [
          "User Management"
        ],
        "description": "This API is deprecated. Please use CGCloud Operational Portal to update a user. Update a user. Privileges can be send with false to remove or true to add. Not send privileges are not changed.",
        "parameters": [
          {
            "name": "id",
            "description": "Internal ID of CGCloud Processing Engine",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "active": true,
                  "name": "john.doe@company.com",
                  "privileges": {
                    "TEMPLATE_MEASURES_READ": true,
                    "TEMPLATE_VOLUMES_WRITE": true,
                    "TEMPLATE_VOLUMES_READ": true,
                    "CONDITIONS_WRITE": true,
                    "CONDITIONS_READ": true,
                    "CONDITIONS_DELETE": true,
                    "USERS_MANAGE": true,
                    "USERS_READ": true,
                    "TEMPLATE_MEASURES_WRITE": true,
                    "TRANSACTION_REGISTER_EXPLICIT": true,
                    "VOLUMES_WRITE": true,
                    "VOLUMES_DELETE": true,
                    "SYSTEM_TEST": true,
                    "VOLUMES_READ": true,
                    "PROMOTIONS_READ": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid JSON format."
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Not authorized, missing privilege for user."
          },
          "404": {
            "description": "User with id not found."
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      },
      "delete": {
        "deprecated": false,
        "tags": [
          "User Management"
        ],
        "description": "This API is deprecated. Please use CGCloud Operational Portal to delete a user. Delete a single user. Only possible if the user was not using the API the last 6 month.",
        "parameters": [
          {
            "name": "id",
            "description": "Internal ID of CGCloud Processing Engine",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted"
          },
          "403": {
            "description": "Not authorized, missing privilege for user."
          },
          "404": {
            "description": "User for id not found"
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/users/{id}/history": {
      "get": {
        "tags": [
          "User Management"
        ],
        "description": "Get user history (audit information) order by date descending.",
        "parameters": [
          {
            "name": "limit",
            "description": "Maximal number of events returned, descending by time",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 50
            }
          },
          {
            "name": "id",
            "description": "Internal ID of CGCloud Processing Engine",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "content": {
              "*/*": {
                "schema": {
                  "example": {
                    "id": "450",
                    "organization_id": "00D580000444byPEAQ",
                    "user_id": "005567000018P0WAAU",
                    "name": "john.doe@company.com",
                    "History": {
                      "actions": [
                        {
                          "logdate": "2016-09-21T11:39:30.975857",
                          "action": "ROUTE",
                          "description": "GET api/users/450/history?limit=2",
                          "affected_rows": 0
                        },
                        {
                          "logdate": "2016-09-21T11:39:22.573672",
                          "action": "ROUTE",
                          "description": "GET api/users/450/history?limit=10",
                          "affected_rows": 0
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not authorized, missing privilege for user."
          },
          "404": {
            "description": "User for id not found"
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    },
    "/api/v1/files/getcsv/{csvguid}": {
      "get": {
        "tags": [
          "File Management"
        ],
        "description": "A stream/file which can be consumed by the caller to download the zipped csv content for the given csvGUID. Default location is tpm/short/export/csv. You will need to unzip it before consuming the CSV.\n By providing a path thru the query, you are able to direct  where the csv file are located.\nThe life cycle of a file depends on a configuration in which directory the file is located. Currently we use the follow pattern (short  24 hrs, long 30 days and permanent).\nRequires CGCloud TPM Release v12. \n\n**Permission Role:** Files read\n",
        "parameters": [
          {
            "name": "csvguid",
            "description": " A valid GUID (Globally Unique Identifier) to identify the requested file",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "minLength": 36,
              "maxLength": 36
            }
          },
          {
            "name": "path",
            "description": "Location of the CSV file. Example: path=tpm/long/export/measures/csv",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 250
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CSV content/file",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/gzip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Invalid guid, invalid path"
          },
          "401": {
            "description": "Bad request token, not validated by sales force token validation."
          },
          "403": {
            "description": "Not authorized, missing privilege for user."
          },
          "404": {
            "description": "path not exists, guid not exists"
          }
        },
        "security": [
          {
            "oauth_2_0": []
          }
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://localhost"
    }
  ],
  "components": {
    "requestBodies": {
      "Payload": {
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "acc": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$"
                  },
                  "prd": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$"
                  }
                },
                "required": [
                  "acc"
                ]
              },
              "minItems": 1,
              "maxItems": 100,
              "example": [
                {
                  "acc": "ACC00000001",
                  "prd": "PRD00000001"
                },
                {
                  "acc": "ACC00000005"
                }
              ]
            }
          }
        },
        "required": true
      },
      "Payload2": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "salesorg": {
                  "type": "string",
                  "minLength": 4,
                  "maxLength": 4,
                  "pattern": "^[a-zA-Z0-9_-]+$"
                },
                "volumes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "startdate": {
                        "type": "string",
                        "format": "date"
                      },
                      "rows": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "prd": {
                              "type": "string",
                              "pattern": "^[a-zA-Z0-9_-]+$"
                            },
                            "acc": {
                              "type": "string",
                              "pattern": "^[a-zA-Z0-9_-]+$"
                            },
                            "value": {
                              "type": "number",
                              "minimum": -2147483647,
                              "maximum": 2147483647
                            }
                          },
                          "required": [
                            "prd",
                            "acc",
                            "value"
                          ]
                        }
                      }
                    },
                    "required": [
                      "startdate",
                      "rows"
                    ]
                  }
                }
              },
              "required": [
                "type",
                "volumes"
              ],
              "example": {
                "type": "b002",
                "salesorg": "CL03",
                "volumes": [
                  {
                    "startdate": "2016-01-01",
                    "rows": [
                      {
                        "prd": "DgnDTabGayq04e38",
                        "acc": "d6Xs6iSEGosXVK2I",
                        "value": 1
                      },
                      {
                        "prd": "VEZALRvM4W3QKK4e",
                        "acc": "yx8tkgHDyXtcITey",
                        "value": 2
                      }
                    ]
                  },
                  {
                    "startdate": "2016-01-08",
                    "rows": [
                      {
                        "prd": "GsKrne1GM1JWW1I9",
                        "acc": "99nVfm7T3y5MZhar",
                        "value": 3
                      },
                      {
                        "prd": "ZP6ZacEhf1AbNGJF",
                        "acc": "d151ihoxCpZe2N3M",
                        "value": 4
                      },
                      {
                        "prd": "ABC",
                        "acc": "XYZ",
                        "value": 5
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "required": true
      }
    },
    "securitySchemes": {
      "oauth_2_0": {
        "type": "oauth2",
        "description": "CGCloud is using Sales Force  OAuth 2.0 for authenticating all api requests.\nOn top, the api are controlled by an authorization layer managed by CGCloud processing engine support.\nThe token is validated using login.safesforce.com/services/oauth2/userinfo and test.safesforce.com/services/oauth2/userinfo\nThe user on SalesFroce side which is used to generate the tokenshould be part of the org connected to CGCloud Processing Engine.\n",
        "x-amf-describedBy": {
          "headers": {
            "Authorization": {
              "description": "Send a valid OAuth 2 access token in authorization header. D\n",
              "type": "string"
            }
          },
          "responses": {
            "401": {
              "description": "Bad or expired token. This can happen if the user or Dropbox\nrevoked or expired an access token. To fix, you should re-\nauthenticate the user.\n"
            },
            "403": {
              "description": "Bad OAuth request (wrong consumer key, bad nonce, expired\ntimestamp...). Unfortunately, re-authenticating the user won't help here.\n"
            }
          }
        },
        "x-amf-settings": {
          "authorizationGrants": [
            "authorization_code"
          ]
        },
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://yourdomain.my.salesforce.com/services/oauth2/authorize",
            "tokenUrl": "https://yourdomain.my.salesforce.com/services/oauth2/tokenken",
            "scopes": {
              "*": ""
            }
          }
        }
      }
    }
  }
}